import{S as e,i as a,s as o,m as n,c as r,a as s,d as t,b as i,j as l,f as c,n as d,o as p,e as u,p as m,q as g,r as h,u as b,v as f,g as v,t as E,h as A,w as y,k as S,x as P,l as q,y as x,z as T,A as C,T as k,B as w,C as z,D as R,E as N,F as I,G as D,H as $}from"./client.576fe932.js";function X(e){var a,o,p,u;return{c(){a=n("svg"),o=n("path"),p=n("path"),this.h()},l(e){a=r(e,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0},!0);var n=s(a);o=r(n,"path",{d:!0},!0),s(o).forEach(t),p=r(n,"path",{d:!0},!0),s(p).forEach(t),n.forEach(t),this.h()},h(){i(o,"d","M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"),i(p,"d","M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"),i(a,"xmlns","http://www.w3.org/2000/svg"),i(a,"width",e.size),i(a,"height",e.size),i(a,"fill","none"),i(a,"viewBox","0 0 24 24"),i(a,"stroke","currentColor"),i(a,"stroke-width",e.strokeWidth),i(a,"stroke-linecap","round"),i(a,"stroke-linejoin","round"),i(a,"class",u="feather feather-book-open "+e.customClass)},m(e,n){l(e,a,n),c(a,o),c(a,p)},p(e,o){e.size&&(i(a,"width",o.size),i(a,"height",o.size)),e.strokeWidth&&i(a,"stroke-width",o.strokeWidth),e.customClass&&u!==(u="feather feather-book-open "+o.customClass)&&i(a,"class",u)},i:d,o:d,d(e){e&&t(a)}}}function M(e,a,o){let{size:n="100%",strokeWidth:r=2,class:s=""}=a;return"100%"!==n&&o("size",n="x"===n.slice(-1)?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),e.$set=e=>{"size"in e&&o("size",n=e.size),"strokeWidth"in e&&o("strokeWidth",r=e.strokeWidth),"class"in e&&o("customClass",s=e.class)},{size:n,strokeWidth:r,customClass:s}}class L extends e{constructor(e){super(),a(this,e,M,X,o,["size","strokeWidth","class"])}}function U(e){var a,o,p,u,m,g;return{c(){a=n("svg"),o=n("rect"),p=n("line"),u=n("line"),m=n("line"),this.h()},l(e){a=r(e,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0},!0);var n=s(a);o=r(n,"rect",{x:!0,y:!0,width:!0,height:!0,rx:!0,ry:!0},!0),s(o).forEach(t),p=r(n,"line",{x1:!0,y1:!0,x2:!0,y2:!0},!0),s(p).forEach(t),u=r(n,"line",{x1:!0,y1:!0,x2:!0,y2:!0},!0),s(u).forEach(t),m=r(n,"line",{x1:!0,y1:!0,x2:!0,y2:!0},!0),s(m).forEach(t),n.forEach(t),this.h()},h(){i(o,"x","3"),i(o,"y","4"),i(o,"width","18"),i(o,"height","18"),i(o,"rx","2"),i(o,"ry","2"),i(p,"x1","16"),i(p,"y1","2"),i(p,"x2","16"),i(p,"y2","6"),i(u,"x1","8"),i(u,"y1","2"),i(u,"x2","8"),i(u,"y2","6"),i(m,"x1","3"),i(m,"y1","10"),i(m,"x2","21"),i(m,"y2","10"),i(a,"xmlns","http://www.w3.org/2000/svg"),i(a,"width",e.size),i(a,"height",e.size),i(a,"fill","none"),i(a,"viewBox","0 0 24 24"),i(a,"stroke","currentColor"),i(a,"stroke-width",e.strokeWidth),i(a,"stroke-linecap","round"),i(a,"stroke-linejoin","round"),i(a,"class",g="feather feather-calendar "+e.customClass)},m(e,n){l(e,a,n),c(a,o),c(a,p),c(a,u),c(a,m)},p(e,o){e.size&&(i(a,"width",o.size),i(a,"height",o.size)),e.strokeWidth&&i(a,"stroke-width",o.strokeWidth),e.customClass&&g!==(g="feather feather-calendar "+o.customClass)&&i(a,"class",g)},i:d,o:d,d(e){e&&t(a)}}}function _(e,a,o){let{size:n="100%",strokeWidth:r=2,class:s=""}=a;return"100%"!==n&&o("size",n="x"===n.slice(-1)?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),e.$set=e=>{"size"in e&&o("size",n=e.size),"strokeWidth"in e&&o("strokeWidth",r=e.strokeWidth),"class"in e&&o("customClass",s=e.class)},{size:n,strokeWidth:r,customClass:s}}class j extends e{constructor(e){super(),a(this,e,_,U,o,["size","strokeWidth","class"])}}function W(e){var a,o,p;return{c(){a=n("svg"),o=n("path"),this.h()},l(e){a=r(e,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0},!0);var n=s(a);o=r(n,"path",{d:!0},!0),s(o).forEach(t),n.forEach(t),this.h()},h(){i(o,"d","M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"),i(a,"xmlns","http://www.w3.org/2000/svg"),i(a,"width",e.size),i(a,"height",e.size),i(a,"fill","none"),i(a,"viewBox","0 0 24 24"),i(a,"stroke","currentColor"),i(a,"stroke-width",e.strokeWidth),i(a,"stroke-linecap","round"),i(a,"stroke-linejoin","round"),i(a,"class",p="feather feather-message-square "+e.customClass)},m(e,n){l(e,a,n),c(a,o)},p(e,o){e.size&&(i(a,"width",o.size),i(a,"height",o.size)),e.strokeWidth&&i(a,"stroke-width",o.strokeWidth),e.customClass&&p!==(p="feather feather-message-square "+o.customClass)&&i(a,"class",p)},i:d,o:d,d(e){e&&t(a)}}}function B(e,a,o){let{size:n="100%",strokeWidth:r=2,class:s=""}=a;return"100%"!==n&&o("size",n="x"===n.slice(-1)?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),e.$set=e=>{"size"in e&&o("size",n=e.size),"strokeWidth"in e&&o("strokeWidth",r=e.strokeWidth),"class"in e&&o("customClass",s=e.class)},{size:n,strokeWidth:r,customClass:s}}class V extends e{constructor(e){super(),a(this,e,B,W,o,["size","strokeWidth","class"])}}function F(e){var a,o,p,u;return{c(){a=n("svg"),o=n("path"),p=n("line"),this.h()},l(e){a=r(e,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0},!0);var n=s(a);o=r(n,"path",{d:!0},!0),s(o).forEach(t),p=r(n,"line",{x1:!0,y1:!0,x2:!0,y2:!0},!0),s(p).forEach(t),n.forEach(t),this.h()},h(){i(o,"d","M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"),i(p,"x1","7"),i(p,"y1","7"),i(p,"x2","7.01"),i(p,"y2","7"),i(a,"xmlns","http://www.w3.org/2000/svg"),i(a,"width",e.size),i(a,"height",e.size),i(a,"fill","none"),i(a,"viewBox","0 0 24 24"),i(a,"stroke","currentColor"),i(a,"stroke-width",e.strokeWidth),i(a,"stroke-linecap","round"),i(a,"stroke-linejoin","round"),i(a,"class",u="feather feather-tag "+e.customClass)},m(e,n){l(e,a,n),c(a,o),c(a,p)},p(e,o){e.size&&(i(a,"width",o.size),i(a,"height",o.size)),e.strokeWidth&&i(a,"stroke-width",o.strokeWidth),e.customClass&&u!==(u="feather feather-tag "+o.customClass)&&i(a,"class",u)},i:d,o:d,d(e){e&&t(a)}}}function O(e,a,o){let{size:n="100%",strokeWidth:r=2,class:s=""}=a;return"100%"!==n&&o("size",n="x"===n.slice(-1)?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),e.$set=e=>{"size"in e&&o("size",n=e.size),"strokeWidth"in e&&o("strokeWidth",r=e.strokeWidth),"class"in e&&o("customClass",s=e.class)},{size:n,strokeWidth:r,customClass:s}}class H extends e{constructor(e){super(),a(this,e,O,F,o,["size","strokeWidth","class"])}}function G(e){var a,o,n;const i=e.$$slots.default,c=p(i,e,null);return{c(){a=u("div"),c&&c.c(),this.h()},l(e){a=r(e,"DIV",{class:!0},!1);var o=s(a);c&&c.l(o),o.forEach(t),this.h()},h(){a.className="Card-container svelte-n3cckc",m(a,"is-clickeable",!!e.onClick),n=g(a,"click",e.onClick)},m(e,n){l(e,a,n),c&&c.m(a,null),o=!0},p(e,o){c&&c.p&&e.$$scope&&c.p(h(i,o,e,null),b(i,o,null)),e.onClick&&m(a,"is-clickeable",!!o.onClick)},i(e){o||(c&&c.i&&c.i(e),o=!0)},o(e){c&&c.o&&c.o(e),o=!1},d(e){e&&t(a),c&&c.d(e),n()}}}function Q(e,a,o){let{onClick:n}=a,{$$slots:r={},$$scope:s}=a;return e.$set=e=>{"onClick"in e&&o("onClick",n=e.onClick),"$$scope"in e&&o("$$scope",s=e.$$scope)},{onClick:n,$$slots:r,$$scope:s}}class J extends e{constructor(e){super(),a(this,e,Q,G,o,["onClick"])}}const Y=e=>{const a=e.split(/\s/g).length/200;return Math.ceil(a)+" Min"},K=e=>new Date(e).toLocaleDateString("es-ES",{year:"numeric",month:"long",day:"2-digit"});function Z(e){var a,o,n,i,d,p,m,g,h,b,P,q,x,T,C,k,w,z,R,N,I,D,$,X,M,U,_,W,B=e.post.title,V=(e.post.primary_tag||{}).name,F=K(e.post.published_at),O=Y(e.post.html),G=e.post.meta_description||e.post.excerpt,Q=new H({props:{size:"14"}}),J=new j({props:{size:"20"}}),Z=new L({props:{size:"20"}});return{c(){a=u("div"),o=u("div"),n=v(),i=u("div"),d=u("div"),p=u("h3"),m=E(B),g=v(),h=u("span"),Q.$$.fragment.c(),b=v(),P=E(V),q=v(),x=u("p"),T=u("time"),J.$$.fragment.c(),C=v(),k=E(F),z=v(),R=u("span"),Z.$$.fragment.c(),N=v(),I=E(O),D=v(),$=u("div"),X=v(),M=u("div"),U=u("p"),_=E(G),this.h()},l(e){a=r(e,"DIV",{class:!0},!1);var l=s(a);o=r(l,"DIV",{class:!0,style:!0},!1),s(o).forEach(t),n=A(l,"\r\n    "),i=r(l,"DIV",{class:!0},!1);var c=s(i);d=r(c,"DIV",{class:!0},!1);var u=s(d);p=r(u,"H3",{class:!0},!1);var f=s(p);m=A(f,B),f.forEach(t),g=A(u,"\r\n        "),h=r(u,"SPAN",{class:!0},!1);var v=s(h);Q.$$.fragment.l(v),b=A(v,"\r\n            "),P=A(v,V),v.forEach(t),q=A(u,"\r\n        "),x=r(u,"P",{class:!0},!1);var E=s(x);T=r(E,"TIME",{datetime:!0,class:!0},!1);var y=s(T);J.$$.fragment.l(y),C=A(y,"\r\n              "),k=A(y,F),y.forEach(t),z=A(E,"\r\n          "),R=r(E,"SPAN",{class:!0},!1);var S=s(R);Z.$$.fragment.l(S),N=A(S,"\r\n              "),I=A(S,O),S.forEach(t),E.forEach(t),u.forEach(t),D=A(c,"\r\n      "),$=r(c,"DIV",{class:!0},!1),s($).forEach(t),X=A(c,"\r\n      "),M=r(c,"DIV",{class:!0},!1);var w=s(M);U=r(w,"P",{class:!0},!1);var L=s(U);_=A(L,G),L.forEach(t),w.forEach(t),c.forEach(t),l.forEach(t),this.h()},h(){o.className="Post-image svelte-iq2b9e",y(o,"background-image","url("+e.post.feature_image+")"),p.className="svelte-iq2b9e",h.className="tag svelte-iq2b9e",T.dateTime=w=e.post.published_at,T.className="svelte-iq2b9e",R.className="svelte-iq2b9e",x.className="svelte-iq2b9e",d.className="Post-title svelte-iq2b9e",$.className="Post-tags",U.className="svelte-iq2b9e",M.className="Post-desc svelte-iq2b9e",i.className="Post-head svelte-iq2b9e",a.className="Post-content svelte-iq2b9e"},m(e,r){l(e,a,r),c(a,o),c(a,n),c(a,i),c(i,d),c(d,p),c(p,m),c(d,g),c(d,h),f(Q,h,null),c(h,b),c(h,P),c(d,q),c(d,x),c(x,T),f(J,T,null),c(T,C),c(T,k),c(x,z),c(x,R),f(Z,R,null),c(R,N),c(R,I),c(i,D),c(i,$),c(i,X),c(i,M),c(M,U),c(U,_),W=!0},p(e,a){W&&!e.post||y(o,"background-image","url("+a.post.feature_image+")"),W&&!e.post||B===(B=a.post.title)||S(m,B),W&&!e.post||V===(V=(a.post.primary_tag||{}).name)||S(P,V),W&&!e.post||F===(F=K(a.post.published_at))||S(k,F),W&&!e.post||w===(w=a.post.published_at)||(T.dateTime=w),W&&!e.post||O===(O=Y(a.post.html))||S(I,O),W&&!e.post||G===(G=a.post.meta_description||a.post.excerpt)||S(_,G)},i(e){W||(Q.$$.fragment.i(e),J.$$.fragment.i(e),Z.$$.fragment.i(e),W=!0)},o(e){Q.$$.fragment.o(e),J.$$.fragment.o(e),Z.$$.fragment.o(e),W=!1},d(e){e&&t(a),Q.$destroy(),J.$destroy(),Z.$destroy()}}}function ee(e){var a,o=new J({props:{onClick:e.navigateTo,$$slots:{default:[Z]},$$scope:{ctx:e}}});return{c(){o.$$.fragment.c()},l(e){o.$$.fragment.l(e)},m(e,n){f(o,e,n),a=!0},p(e,a){var n={};e.navigateTo&&(n.onClick=a.navigateTo),(e.$$scope||e.post)&&(n.$$scope={changed:e,ctx:a}),o.$set(n)},i(e){a||(o.$$.fragment.i(e),a=!0)},o(e){o.$$.fragment.o(e),a=!1},d(e){o.$destroy(e)}}}function ae(e,a,o){let{post:n}=a;return e.$set=e=>{"post"in e&&o("post",n=e.post)},{post:n,navigateTo:()=>P("blog/"+n.slug)}}class oe extends e{constructor(e){super(),a(this,e,ae,ee,o,["post"])}}var ne=[{title:"Base de Datos + Error 1115 + Laragon!",slug:"base-de-datos-error-1115-laragon",html:'\x3c!-- image: \'media/about-me/foto.jpg\' --\x3e\n\n\x3c!-- ![Banner](media/blog/Laragon/error-1115/Banner.jpg) --\x3e\n\n<p>Estaba tratando de importar una base de datos de mi máquina local a otra y me\nencontré con el siguiente error: <strong>“ERROR #1115: Unknown character set: utf8mb4\n”.</strong></p>\n\x3c!-- ![ERROR #1115](..\\images\\Blog\\error-1115.png) --\x3e\n\n<p><img src="media/blog/Laragon/error-1115/error-1115.png" alt="ERROR #1115"></p>\n<p>Este mensaje se debe a incompatibilidades de versiones de MYSQL, en un lenguaje\nmas sencillo es que la versión que utilizamos en local es superior a la que\ndisponemos en el hosting, servidor, etc. (en mi caso en otra máquina local).</p>\n<h2 id="solución-con-visual-studio-code">Solución con Visual Studio Code</h2>\n<p>Para solucionar esto, lo que vamos a hacer, es abrir el fichero <strong>.sql</strong> con un\neditor de textos plano, en mi caso uso visual studio code, y usaremos la\nherramienta de “Buscar y reemplazar”. Vamos a buscar utf8mb4 y lo vamos a\nreemplazar por utf8.</p>\n\x3c!-- ![visual-studio-code](..\\images\\Blog\\visual-studio-code.png) --\x3e\n\n<p><img src="media/blog/Laragon/error-1115/visual-studio-code.png" alt="visual-studio-code"></p>\n<h2 id="solución-con-laragon">Solución con Laragon</h2>\n<p>Como estoy utilizando Laragon, este trae integrado como administrador de base de\ndatos <a target="_blank" rel="nofollow" href="https://www.heidisql.com/download.php">download</a></p>\n\x3c!-- ![heidisql](..\\images\\Blog\\heidisql.png) --\x3e\n\n<p><img src="media/blog/Laragon/error-1115/heidisql.png" alt="heidisql"></p>\n<p>Para solucionar esto, lo que vamos a hacer, es abrir el fichero <strong>.sql</strong> en el\neditor de consultas, y usaremos la herramienta de “Buscar y reemplazar”. Vamos a\nbuscar utf8mb4 y lo vamos a reemplazar por utf8.</p>\n\x3c!-- ![buscar](..\\images\\Blog\\buscaryremplazar.png) --\x3e\n\n<p><img src="media/blog/Laragon/error-1115/buscaryremplazar.png" alt="buscar"></p>\n<p>Nuestro archivo quedara de la siguiente manera.</p>\n<h2 id="antes">Antes</h2>\n\x3c!-- ![antes](..\\images\\Blog\\antes.png) --\x3e\n\n<p><img src="media/blog/Laragon/error-1115/antes.png" alt="antes"></p>\n<h2 id="después">Después</h2>\n\x3c!-- ![después](..\\images\\Blog\\despues.png) --\x3e\n\n<p><img src="media/blog/Laragon/error-1115/despues.png" alt="después"></p>\n<h2 id="conclusiones">Conclusiones</h2>\n<p>¡Listos para importar sus Bases de Datos!</p>\n',date:"2020-08-16T23:52:00.000+00:00",feature_image:"media/blog/Laragon/error-1115/Banner.png",excerpt:"",printDate:"August 16, 2020",printReadingTime:"2 min read"},{title:"C# con Devexpress!",slug:"C-y-Devexpress",html:'\x3c!-- ![Acordeon](media/blog/Devexpress/Acordeon/banner.png) --\x3e\n\n<blockquote>\n<p>Este artículo hace parte de una iniciativa genial: el primer calendario de\nadviento de C# español. Cada día, durante 9 días, dos artículos nuevos sobre\nC# serán compartidos por la comunidad. Esta es mi contribución.</p>\n</blockquote>\n<p>Hace un poco mas de cinco años que conoci <strong>C#</strong> y junto a el <strong>Devexpress</strong>,\nera mi primer trabajo sin experiencia alguna y frente a un mundo lleno de nuevos\nretos, había realizado pequeños proyectos de clases con visual basic pero esto\nera totalmente diferente y más aún cuando mire el poder que tenía y lo que se\npodia hacer al ver los controles que ofrecía Devexpress y su integración con C#,\ncreo que es por esto que le tengo tanto apreció a este lenguaje pues fue quien\nme dio la oportunidad de hoy poder trabajar como programador, es por eso que hoy\nles quiero contar un poco sobre este fremework y su integración con C#.</p>\n<p>Devexpress desde mi punto de vista esta enfocado en la experiencia de usuario,\nes por ello que en este artículo estaremos abordando el tema de <strong>Fluent Design\nForm and Acrylic effects</strong> una de las nuevas capacidades diseñadas para replicar\nla metáfora de la próxima generación de IU de Microsoft</p>\n<h2 id="winforms---forma-de-diseño-fluido-y-efectos-winforms-fluent-design-and-acrylic-effects">WinForms - Forma de diseño fluido y efectos (WinForms Fluent Design and Acrylic Effects)</h2>\n<p>La idea de elementos de ventana parcialmente transparentes se remonta al efecto\nAero en Windows 7. En las últimas versiones de Windows 10, Microsoft está\nintroduciendo Acrylic, que se explica\n<a target="_blank" rel="nofollow" href="https://docs.microsoft.com/en-us/windows/uwp/design/style/acrylic">en este artículo relacionado con UWP</a>.\nPara ilustrar, esta imagen muestra un formulario con un control de acordeón\nparcialmente transparente:</p>\n<p><img src="media/blog/Devexpress/Acordeon/winforms-fluent-form.png" alt="WinForms Fluent Design and Acrylic Effects">\nComo consecuencia de la iniciativa Fluent Design de Microsoft , muchos\ndesarrolladores de aplicaciones modernas como la de la imagen hacen tres\nelecciones importantes para sus implementaciones de UI:</p>\n<ul>\n<li>Implementan un diseño adaptable, por lo que las ventanas de la aplicación se\nven bien en diferentes tamaños de pantalla.</li>\n<li>Muestran una barra de navegación que utiliza Acrílico y el efecto Revelar\nresaltado.</li>\n<li>Utilizan un menú de hamburguesas, que desempeña un papel importante para los\nescenarios de diseño adapta.</li>\n</ul>\n<h2 id="diseño-fluido-para-winforms">Diseño fluido para WinForms</h2>\n<p>Para crear aplicaciones similares para Windows Forms, primero creamos un nuevo\ncontrol de formulario llamado FluentDesignForm. Como reemplazo del estándar\nForm, esto es similar XtraForm, RibbonFormy, TabbedForm, pero también es muy\ndiferente porque combina varios elementos conectados:</p>\n<ul>\n<li>Un control de acordeón para la navegación, con un nuevo estilo de menú de\nhamburguesa aplicado.</li>\n</ul>\n<p><img src="media/blog/Devexpress/Acordeon/Menu.png" alt="Menu Hamburguesa"></p>\n<ul>\n<li>Fluent Design Form Control toma el control del área de encabezado del\nformulario y le permite agregar botones, editores y etiquetas en su\nsuperficie.</li>\n</ul>\n<p><img src="media/blog/Devexpress/Acordeon/elements.png" alt="Diseño fluido"></p>\n<ul>\n<li>El contenedor de formularios de diseño fluido contiene el contenido del\nformulario.</li>\n</ul>\n<h2 id="transparencia-parcial">Transparencia parcial</h2>\n<p>Establézcalo FluentDesignForm.EnableAcrylicAccenten true para habilitar el\nefecto Acrílico para el Control de Acordeón. Al mismo tiempo, el efecto Revelar\nresaltado también se activa, imitando una fuente de luz suave que se mueve junto\ncon el puntero del mouse.</p>\n<p><img src="media/blog/Devexpress/Acordeon/transparencia.gif" alt="Transparencia parcial"></p>\n<blockquote>\n<p>Notas: Tenga en cuenta que ambos efectos están habilitados en Windows 10\nversión 1803 (compilación de SO 17134), que se requiere para ver estos efectos\nen acción. El formulario de diseño fluido detecta su compilación de Windows y\nutiliza automáticamente la representación de DirectX para pintar estos\nefectos, si es posible.</p>\n</blockquote>\n<h2 id="diseño-adaptativo">Diseño adaptativo</h2>\n<p>Como mencioné anteriormente, el diseño adaptativo es el componente final\nimportante de Fluent Design, y nuestro nuevo Formulario implementa esto\nutilizando dos valores de umbral para su ancho. Cuando un usuario cambia el\ntamaño del formulario, el Control de acordeón cambia automáticamente su\nDisplayModedependiendo del ancho.</p>\n<p><img src="media/blog/Devexpress/Acordeon/resize.gif" alt="Diseño adaptativo"></p>\n<h2 id="integración-de-acordeón">Integración de acordeón</h2>\n<p>El Control de Acordeón puede integrarse con la Forma de Diseño Fluido en dos\nmodos: un modo &quot;tradicional&quot; donde el encabezado del formulario es el elemento\nmás alto, y un modo de &quot;tamaño completo&quot; donde el Acordeón se extiende hasta la\nparte superior del Formulario.</p>\n<p><img src="media/blog/Devexpress/Acordeon/acordeon.png" alt="Acordeon"></p>\n<blockquote>\n<p>Notas: Tenga en cuenta que el modo de tamaño completo funciona mejor con las\nmáscaras planas modernas, por lo que actualmente requiere The Bezier o una de\nlas máscaras DevExpress de Office 2016.</p>\n</blockquote>\n<h2 id="conclusiones">Conclusiones</h2>\n<p>C# es un lenguaje muy excepcional con muchísimas funcionalidades y desde mi\npropia experiencia Devexpress lo complementa si deseas una ofrecer una expericia\nde usuario amigable.</p>\n<p>Tambien cabe mencionar que Devexpress tiene controles que se integran\nperfectamente con Xamarin, Visual Studio (C#, ASP.NET y ASP.NET MVC), Delphi,\nHTML5 / JavaScript.</p>\n<p>Y tú, ¿Considerarías usarlos en tu próxima aplicación?</p>\n<p><img src="media/blog/Devexpress/Acordeon/images.jpg" alt="Acordeon"></p>\n<h2 id="agradecimimento">Agradecimimento</h2>\n<p>Un Agradecimiento especial a los organizadores del primer <strong>#advientocsharp</strong> en\nespañol, por darme la oportunidad de ser parte de esta evento ya que es mi\nprimera publicación en un blog, esperando que este articulos sea de sua agrado\nme despido.</p>\n',date:"2018-12-12T07:08:02.000-07:00",feature_image:"media/blog/Devexpress/Acordeon/banner.png",excerpt:"",printDate:"December 12, 2018",printReadingTime:"4 min read"},{title:"Api Rest: Crear una Api Rest con Asp.Net MVC y C#",slug:"Crear-una-Api-Rest-con-AspNet-MVC-y-CSharp",html:'<figcaption>Ilustración Gracias a <a href="https://www.freepik.com/free-photos-vectors/banner" target="_blank">upklyak - www.freepik.com</a></figcaption>\n\n<h2 id="¿qué-es-una-api-rest">¿Qué es una API Rest?</h2>\n<p>Una API REST es una arquitectura de Software BackEnd que se apoya en el estándar\nHTTP, que permite crear aplicaciones y servicios que pueden ser usados desde\ncualquier dispositivo o cliente que utilice HTTP.</p>\n<p>Los datos obtenidos pueden ser XML o JSON que suele ser más rápido.</p>\n<p>Las operaciones más importantes es el denominado <strong>CRUD (Crear, Consultar,\nModificar, Eliminar)</strong>):</p>\n<ul>\n<li>GET (Leer y consultar los registros)</li>\n<li>POST (Crear nuevos registros)</li>\n<li>PUT (Editar y modificar los registros)</li>\n<li>DELETE (Eliminar los registros)</li>\n</ul>\n<p>La principal ventaja de las API REST es que podemos desarrollar una API en el\nbackend y utilizarla en cualquier dispositivo, ahorrando así mucho tiempo de\ndesarrollo, estas API son capaces de contestas las llamadas desde una serie de\nURLs en formato JSON y también pueden recibir datos en formato JSON para\ngestionar la información que le enviemos.</p>\n<p>Tratere que al finalizar este artículo puedas comprender de forma más clara este\nconcepto.</p>\n<p>Para este ejemplo necesitaremos tener instalado lo siguiente:</p>\n<ul>\n<li>Visual Studio 2019</li>\n<li>Postman</li>\n<li>Base de Datos (Para este ejemplo necesitaremos una base de datos con al\nmenos una tabla que será llamada para realizar nuestro <strong>CRUD (Crear,\nConsultar, Modificar, Eliminar)</strong>).</li>\n</ul>\n<blockquote>\n<p>Nota: para este ejemplo ocuparemos una Base de Datos <strong>&quot;POS&quot;</strong> alojada en un\nservidor AZURE.</p>\n</blockquote>\n<h2 id="creando-nuestro-proyecto-web">Creando nuestro proyecto Web</h2>\n<p>Lo primero es crear un nuevo proyecto en Visual Studio, como se muestra en la\nsiguiente imagen.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/1-RestApi.png" alt="CrearProyecto1"></p>\n<p>A continuación vamos a seleccionar <strong>Aplicacion web ASP.NET (.NET Framework)</strong>,\ncomo se muestra en la imagen siguiente:</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/2-RestApi.png" alt="Proyecto1"></p>\n<blockquote>\n<p>Nota: Asegurate se que el proyecto seleccionado sea del tipo C#, por que\npuedes confundirte con un proyecto del tipo VisualBasic</p>\n</blockquote>\n<p>Configuramos el nombre de nuestro proyecto, asi como la ubicación del mismo.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/3-RestApi.png" alt="configurarProyecto"></p>\n<p>A continuación seleccionaremos el template o plantilla API Web.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/4-RestApi.png" alt="template"></p>\n<p>Una vez terminado el proceso, se mostrara una pantalla de información a ASP.NET.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/5-RestApi.png" alt="newProyecto"></p>\n<h2 id="agregando-proyecto-de-acceso-a-datos">Agregando proyecto de Acceso a Datos</h2>\n<p>Agregamos un nuevo proyecto donde realizaremos la conexion a la Base de Datos\ncomo se muestra a continuación: <strong>Seleccionamos el nombre de la Solución &gt; Click\nderecho sobre el proyecto &gt; Agregar &gt; Nuevo proyecto.</strong></p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/6-RestApi.png" alt="addProyecto"></p>\n<p>El nuevo proyecto será del tipo biblioteca de clases, para esto podemos hacer\nuso del control de busqueda de plantilla teclear <strong>&quot;Biblioteca de Clases&quot;</strong> en\ncual nos mostrara el proyecto que vamos a ocupar.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/7-RestApi.png" alt="Proyecto2"></p>\n<blockquote>\n<p>Nota: Asegurate se que el proyecto seleccionado sea del tipo C#, por que\npuedes confundirte con un proyecto del tipo VisualBasic</p>\n</blockquote>\n<p>Configuramos el nombre de nuestro proyecto en este caso será <strong>AccesoDatos</strong>,\npor defecto dejaremos la misma ubicación del proyecto.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/8-RestApi.png" alt="nombreProyecto2"></p>\n<p>Una vez que se ha creado nuestro segundo proyecto podemos ver los dos proyectos\nen la misma solución como se muestra en la siguiente imagen.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/8-1-RestApi.png" alt="ambosProyectos"></p>\n<blockquote>\n<p>Nota: Podemos eliminar la Class1.cs ya que no la necesitamos para este\nejemplo.</p>\n</blockquote>\n<p>A continuación procedemos a agregar un nuevo elemento como semuestra a\ncontinuación: <strong>Seleccionamos el nombre del proyecto &quot;AccesoDatos&quot; &gt; Click\nderecho sobre el proyecto &gt; Agregar &gt; Nuevo elemento.</strong></p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/9-RestApi.png" alt="agregaModel"></p>\n<p>El elemento que vamos a agregar será <strong>Visual C# &gt; Datos &gt;ADO.NET Entity Data\nModel</strong> le cambiamos el nobre del Modelo y le damos agregar.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/10-RestApi.png" alt="addModelo"></p>\n<p>En el asistente para Entity Data Model escogeremos el primero <strong>EF Designer\ndesde base de datos</strong></p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/11-RestApi.png" alt="EFDesigner"></p>\n<p>A continuación debemos de seleccionar la conexión de datos que vamos a ocupar,\nen este caso como es un proyecto nuevo no tenemos ninguna por lo que deberemos\nde crearla, para ello vamos a darle click al boton nueva conexión.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/12-RestApi.png" alt="conexion1"></p>\n<p>Se nos mostrara la pantalla de propiedades de la conexión, donde nos pide:</p>\n<ul>\n<li>Nombre Servidor</li>\n<li>Tipo de Autenticación</li>\n<li>Usuario</li>\n<li>Contraseña</li>\n<li>Nombre Base de Datos</li>\n</ul>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/13-RestApi.png" alt="configConexion"></p>\n<blockquote>\n<p>Nota: En caso de querer ocupar otro tipo de origen de datos debes de darle\nclick al boton cambiar y seleccionar el origen de datos que deseas. Una vez\nque haz llenado todos los campos requeridos con los datos que te conectaran\ncon tu base de datos puedes procedes a probar conexión y aceptar.</p>\n</blockquote>\n<p>Si nuestra cadena de conexión se ha creado correctamente el asistente nos\nregresara a la pantalla previa y llenara los datos que necesitamos, en este\npunto como este es un ejemplo seleccionaremos incluir datos confidenciales de\nnuestra cadena de conexión, pero lo ideal es que esta información no\npermitieramos para luego pasarlo a través de nuestro código, pero ese es tema\npara otro blog.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/14-RestApi.png" alt="conexion2"></p>\n<p>Luego seleccionamos la versión del Entity Framework en este caso la version 6.x.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/15-RestApi.png" alt="selectEntity"></p>\n<p>En la siguiente pantalla del asistente seleccionamos la base de datos y las\ntablas que vamos a utilizar, por ultimo tecleamos el nombre de nuestro modelo,\nen este caso <strong>POSmodel</strong> y haga clic en finalizar.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/16-RestApi.png" alt="SelectDB"></p>\n<blockquote>\n<p>Nota: 1) Puedes Pluralizar o singularizar el nombre de objeto generado:\nbásicamente, agregar o quitar <strong>&quot;s&quot;</strong> o es en los nombres de objeto. 2)\nIncluir una columna de clave externa en el modelo: esta propiedad se utiliza\npara incluir relaciones entre tablas.</p>\n</blockquote>\n<p>Una vez que lo haga, obtendrá una buena vista de sus tablas (detrás de escena).</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/17-RestApi.png" alt="tablasModelo"></p>\n<blockquote>\n<p>Nota: Asegurate en este momento de compilar tu proyecto, para que no te de\nproblemas más adelante.</p>\n</blockquote>\n<p>En nuestro proyecto AccesoDatos vamos a buscar el archivo app.Config, donde\nseleccionaremos y copiaremos la cadena de conexión a la base de datos.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/18-RestApi.png" alt="appConfig"></p>\n<p>En nuestro proyecto principal <strong>WebApi</strong> vamos a buscar el archivo\n<strong>Web.config</strong> y pegar la cadena de conexión copiada en el paso anterior.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/19-RestApi.png" alt="webApiConexion"></p>\n<p>A continuación agregaremos una referencia.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/20-RestApi.png" alt="addRegerencia"></p>\n<p>En la opción proyectos seleccionaremos el nombre del proyecto donde se encuentra\nla configuración de la base de datos, en este caso <strong>AccesoDatos</strong> .</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/21-RestApi.png" alt="addReferencia2"></p>\n<p>Puedes ver la referencia del proyecto en el apartado <strong>Referencias</strong>.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/22-RestApi.png" alt="references"></p>\n<h2 id="agregando-un-controlador">Agregando un Controlador</h2>\n<p>Siempre en nuestro proyecto principal agregaremos un Controller como semuestra a\ncontinuación: <strong>Seleccionamos la carpeta &quot;Controller&quot; &gt; Click derecho sobre el\nproyecto &gt; Agregar &gt; Controlador.</strong></p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/23-RestApi.png" alt="addController"></p>\n<p>En la pantalla del asistente seleccionaremos <strong>Web API</strong> el tipo <strong>Controlador\nWeb Api 2 - Empty</strong>.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/24-RestApi.png" alt="addController2"></p>\n<blockquote>\n<p>Nota: En caso de que te salga un error incicando que no puede encontrar el\narchivo AccesoDatos.dll puedes seleccionar el proyecto AccesoDatos -&gt; Build -&gt;\nRebuild Solution.</p>\n</blockquote>\n<p>Si no te dio problemas puedes proceder a editar el nombre del controlador, en\neste caso vamos a ocupar <strong>ArticuloController</strong>.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/25-RestApi.png" alt="addController3"></p>\n<p>En el controllador que se acaba de crear agregaremos la siguiente línea\n<strong>&quot;private POSEntities Context = new POSEntities()&quot;</strong> que es la referencia de la\nconexión de la base datos.</p>\n<p>Al agregar esta linea se nos presente un error por que no detecta o no reconoce\nla referencia de POSEntities, para solucionarlo tenemos que agregar la\nreferencia del proyecto.</p>\n<p>Una solución sencilla es posicionarlos en POSEntities damos click al icono\n<img src="media/blog/CSharp/ASP-NET/RESTAPI/26-2-RestApi.png" alt="icono"> y este nos\ndesplegara un menu donde seleccionaremos <strong>&quot;using AccesoDatos;&quot;</strong></p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/26-RestApi.png" alt="addUsingReferencia"></p>\n<p>Si hemos realizado los pasos correctamente nuestra controlador deberia de verse\na como se muestra a continuación.\n<img src="media/blog/CSharp/ASP-NET/RESTAPI/26-1-RestApi.png" alt="addUsingReferencia1"></p>\n<h2 id="administrar-paquetes-nuget">Administrar paquetes NuGet</h2>\n<p>Para poder continuar con este ejemplo necesitamos algunos paquetes o archivos\nDLL necesarios, para ellos vamos a hacer uso del Administrador de paquetes Nuget\nque nos ofrece Visual Studio.</p>\n<p>En nuestro proyecto WebAPI vamos a seleccionar Referencias &gt; Administrar\npaquetes NuGet...</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/27-RestApi.png" alt="addPaquetesNuget"></p>\n<p>En el administrador de paquetes en el apartado Examinar vamos a buscar el\npaquete <strong>EntityFramework</strong> y le damos instalar.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/28-RestApi.png" alt="addPaquetesNuget1"></p>\n<p>Al momento de la instalación se mostraran una ventana de Aceptación de\nLincencia, le damos Aceptar para poder continuar.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/28-1-RestApi.png" alt="addPaquetesNuget2"></p>\n<p>Se agregaran 2 referencia <strong>EntityFramework</strong> y <strong>EntityFramework.SqlServer</strong>.\nPuedes revisarlo en:</p>\n<ol>\n<li>Las referencias del proyecto.</li>\n<li>Apartado instalado del Administrador de paquetes Nuget.</li>\n<li>El paquete instalado muestra un icono en color verde.</li>\n<li>Al seleccionar el paquete en la parte derecha nos muestra la opción de\ndesinstalar.</li>\n</ol>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/29-RestApi.png" alt="addPaquetesNuget3"></p>\n<p>En la sección de referencias del controlador vamos a eliminar la referencia\n<strong>using System.Net.Http</strong>.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/29-1-RestApi.png" alt="addPaquetesNuget4"></p>\n<h2 id="agregando-crud">Agregando CRUD</h2>\n<p>En este punto vamos a agregar el CRUD que ocupara nuestra API-REST.</p>\n<p>La primera acción que vamos a crear es la de <strong>Consultar</strong> donde ocuparemos el\nmétodo <strong>GET</strong>, para ello agregaremos el siguiente código que realizara la\nconsulta de todos los registros de la tabla.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/apiGet.png" alt="apiGet"></p>\n<blockquote>\n<p>Nota: El nombre de la tabla Articulo que se ocupa en\n<strong><code>IEnumerable&lt;Articulo&gt;</code></strong> la podemos obtener consultando la referencia de\nnuestra conexión a la base de datos.</p>\n</blockquote>\n<p>Para retornar los valores filtrados por id deberiamos agregar el siguiente\ncódigo.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/apiGetid.png" alt="apiGetid"></p>\n<p>Tu código debería quedar de la siguiente forma.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/30-RestApi.png" alt="crudConsulta"></p>\n<p>La siguiente acción a realizar es para <strong>Crear</strong> un nuevo registro, en este caso\nvamos utilizar el método <strong>POST</strong>.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/apiPost.png" alt="apiPost"></p>\n<p>Tu código debería quedar de la siguiente forma.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/31-RestApi.png" alt="crudPOST"></p>\n<p>La siguiente acción a realizar nos permitira <strong>Actualizar</strong> nuestros registros,\nen este caso vamos utilizar el método <strong>PUT</strong>.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/apiPut.png" alt="apiPut"></p>\n<blockquote>\n<p>Nota: En caso de que te salga un error asegurate de tener agregada la\nreferencia <strong>System.Data.Entity</strong>.</p>\n</blockquote>\n<p>Tu código debería quedar de la siguiente forma.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/32-RestApi.png" alt="crudPUT"></p>\n<p>La siguiente acción a realizar nos permitira <strong>Eliminar</strong> nuestros registros, en\neste caso vamos utilizar el método <strong>Delete</strong>.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/apiDelete.png" alt="apiDelete"></p>\n<p>Tu código debería quedar de la siguiente forma.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/33-RestApi.png" alt="crudDelete"></p>\n<p>A continución ejecutaremos nuestra aplicación la cual nos abrira nuestro\nnavegador con la dirección de Localhost que nos mostrara la página principal de\nnuestra API-REST.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/34-RestApi.png" alt="pagina"></p>\n<p>En la página que se nos ha cargado, seleccionaremos el apartado API, aquí\npodemos visualizar los métodos activos en este caso el primero que se nos\nmuestra es el método GET.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/35-RestApi.png" alt="paginaApi"></p>\n<p>Para poder probar que lo que hemos hecho esta funcionando vamos consultar todos\nlos registros de la tabla, en nuestro navegador debemos teclear despues de\n<strong>localhost:puerto/</strong> <strong>api/articulo</strong>, quedando de la siguiente manera\n<strong>localhost/api/usuarios</strong>, si todo esta bien se visualizaran todos los\nregistros de la tabla en formato XML.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/35-1-RestApi.png" alt="testApi"></p>\n<blockquote>\n<p>Nota: En este ejemplo estamos ocupando la tabla Articulo tu tendras que\ncambiarla por las tablas que vas a ocupar ejemplo: api/usuarios, api/facturas,\napi/clientes, etc</p>\n</blockquote>\n<p>La salida de la información esta en formato XML para generarla en formato Json\ndebemos editar el archivo <strong>WebApiConfig.cs</strong> que se ubica en el proyecto\nprincipal WebAPI.</p>\n<p>Teclearemos el siguiente código que realizar la salida en formato Json y remueve\nla salida en formato XML.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/formatJson.png" alt="formatJson"></p>\n<p>Tu código debería quedar de la siguiente forma.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/35-2-RestApi.png" alt="testApi"></p>\n<p>Si volvemos a realizar la consulta de todos los registros veremos que la salida\nserá en formato Json.</p>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/35-3-RestApi.png" alt="testApi"></p>\n<h2 id="probando-api-rest-con-postman">Probando API-REST con POSTMAN</h2>\n<p>Llegamos al final de esta publicación y en esta sección vamos a realizar la\nprueba final de nuestra API-REST.</p>\n<p>Lo primero que debemos realizar es ejecutar POSTMAN que previamente deberias\ntener instalado, si aun no lo tienes instalado te dejo el\n<a target="_blank" rel="nofollow" href="https://www.postman.com/">Link</a> para que te registres y descargues.</p>\n<h3 id="método-get-todos-los-registros">MÉTODO GET (Todos los registros)</h3>\n<p>Para probar nuestro método GET con POSTMAN deberiamos de realizar los siguientes\npasos:</p>\n<ol>\n<li>Seleccionamos el método <strong>GET</strong>.</li>\n<li>Tecleamos la <strong>URL</strong> de nuestra API, en mi caso sería:\n(<code>https://localhost:44381/api/articulo</code>).</li>\n<li>Presionamos el botón <strong>SEND</strong>.</li>\n<li>En la parte inferior <strong>(Body)</strong> se visualizan todos los registros de la\ntabla.</li>\n<li>Se nos indica el stado de nuestra consulta <strong>Status: 200 ok</strong>.</li>\n</ol>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/36-RestApi.png" alt="testGET"></p>\n<h3 id="método-post-agregar-un-nuevo-registro">MÉTODO POST (Agregar un nuevo registro)</h3>\n<p>Para agregar nuevos registros en nuestra base de datos ocuparemos el método\nPOST.</p>\n<p>Siguiendo los pasos anteriores nos quedaria de la siguiente manera:</p>\n<ol>\n<li>Seleccionamos el método <strong>POST</strong>.</li>\n<li>Tecleamos la <strong>URL</strong> de nuestra API, en mi caso sería:\n(<code>https://localhost:44381/api/articulo</code>).</li>\n<li>En los parametros seleccionaremos <strong>Body &gt; raw &gt; Formato Json</strong>.</li>\n<li>Tecleremos los nuevos datos a agregar en formato Json</li>\n<li>Presionamos el botón <strong>SEND</strong>.</li>\n<li>En la parte inferior <strong>(Body)</strong> se visualizara el nuevo registros agregado a\nnuestra base de datos.</li>\n<li>Se nos indica el stado de nuestra consulta <strong>Status: 200 ok</strong>.</li>\n</ol>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/39-RestApi.png" alt="testPOST"></p>\n<h3 id="método-put-modificando-un-registro">MÉTODO PUT (Modificando un registro)</h3>\n<p>Para modificar o actualizar nuestros registro en base de datos ocuparemos el\nmétodo PUT.</p>\n<p>Siguiendo los pasos anteriores para actualizar un registro desde Postman\nrealizaremos los siguientes pasos:</p>\n<ol>\n<li>Seleccionamos el método <strong>PUT</strong>.</li>\n<li>Tecleamos la <strong>URL</strong> de nuestra API, en mi caso sería:\n(<code>https://localhost:44381/api/articulo/1</code>).</li>\n<li>En los parametros seleccionaremos <strong>Body &gt; raw &gt; Formato Json</strong>.</li>\n<li>Tecleremos los datos a cambiar en formato Json</li>\n<li>Presionamos el botón <strong>SEND</strong>.</li>\n<li>En la parte inferior <strong>(Body)</strong> se visualizan los registros ya actualizados.</li>\n<li>Se nos indica el stado de nuestra consulta <strong>Status: 200 ok</strong>.</li>\n</ol>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/37-RestApi.png" alt="testPUT"></p>\n<h3 id="método-get-obtener-registros-filtrado-por-id">MÉTODO GET (Obtener registros filtrado por id)</h3>\n<p>Tambien se puede consultar los cambios volviendo a ejecutar un método GET ya sea\nel de obtener todo o bien el método de filtrado por id.</p>\n<p>Para ello podemos realizar los siguientes pasos:</p>\n<ol>\n<li>Seleccionamos el método <strong>GET</strong>.</li>\n<li>Tecleamos la <strong>URL</strong> de nuestra API y le agregamos al final el id de nuestro\narticulo, en mi caso sería <code>articulo/1</code>:\n(<code>https://localhost:44381/api/articulo/1</code>).</li>\n<li>Presionamos el botón <strong>SEND</strong>.</li>\n<li>En la parte inferior <strong>(Body)</strong> se visualizara el registros de que\nseleccionado.</li>\n<li>Se nos indica el stado de nuestra consulta <strong>Status: 200 ok</strong>.</li>\n</ol>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/36-1-RestApi.png" alt="testGET1"></p>\n<h3 id="método-delete-eliminar-registros">MÉTODO DELETE (Eliminar registros)</h3>\n<p>Para eliminar los registros de nuestra base de datos ocuparemos el método\nDelete. Siguiendo los pasos anteriores nos quedaria de la siguiente manera:</p>\n<ol>\n<li>Seleccionamos el método <strong>DELETE</strong>.</li>\n<li>Tecleamos la <strong>URL</strong> de nuestra API y le agregamos al final el id de nuestro\narticulo que deseamos eliminar, en mi caso sería <code>articulo/17</code>:\n(<code>https://localhost:44381/api/articulo/17</code>).</li>\n<li>Presionamos el botón <strong>SEND</strong>.</li>\n<li>En la parte inferior <strong>(Body)</strong> se visualizara el registros eliminados.</li>\n<li>Se nos indica el stado de nuestra consulta <strong>Status: 200 ok</strong>.</li>\n</ol>\n<p><img src="media/blog/CSharp/ASP-NET/RESTAPI/38-RestApi.png" alt="testDelete"></p>\n<blockquote>\n<p>Nota: Recuerda que despues de utilizar los métodos POST, DELETE, PUT puedes\nocupar el método GET (Obtener Todos) ó el método GET(id) para consultar los\ncambios realizados.</p>\n</blockquote>\n<h2 id="conclusiones">Conclusiones</h2>\n<p>Creo que este artículo se extendio pero era necesario, si realizaste el paso a\npaso no deberias de tener problemas y ahora tu API-REST puede ser utilizado en\ncualquier aplicación por el método HTTP.</p>\n<p>Recuerda que para este ejemplo ocupamos POSTMAN pero puedes ocupar cualquier\notra herramienta de testing para API REST tanto en versiones de escritorio como\nweb como por ejemplo: insomnia, Paw, Wizdler, etc, por nombrar algunas.</p>\n<p>Si te gustaria ver como publicar este proyecto en un servidor IISS o como\npodemos consumir nuestra API-REST desde un proyecto FrontEnd o algún otro tema\nque te gustaria ver dejame tu comentario con gusto lo leere y sacare un tiempo\npara responderte y escribirlo.</p>\n<p>Puedes descargar el proyecto desde mi repositorio en\n<a target="_blank" rel="nofollow" href="https://github.com/erickmarcia/CSHARP/tree/main/APIREST/WebApi">GitHub</a></p>\n<p>¡Listo para crear tu primera API-REST!</p>\n',date:"2021-06-05T23:52:00.000+00:00",feature_image:"media/blog/CSharp/ASP-NET/RESTAPI/Banner.jpg",excerpt:"",printDate:"June 5, 2021",printReadingTime:"13 min read"},{title:"Php + XDebug + Laragon + Visual Studio Code!",slug:"php-xdebug-laragon-visual-studio-code",html:'\x3c!-- ![Banner](media/blog/Php/xdebug/bannerPhpXdebug.png) --\x3e\n\n<p>Como programador una de las opciones que menos me gusta pero que realmente es\nnecesario es el debug, mas en los casos cuando el desarrollo falla y no tienes\nni la minima idea de como resolverlo.</p>\n<p>Recién estoy llevando los cursos de la Especialidad de <strong>EDteam</strong> sobre Php con\nla profesora <strong>Yesi Days</strong>, por lo cual en este artículo no pretendo enseñarte\ncuales son los fundamentos de la depuración en Php, más bien como preparar el\nentorno para poder realizar la depuraciones de nuestro código por que realmente\npuede hacernos la vida más fácil.</p>\n<h2 id="xdebug">Xdebug</h2>\n<p><a target="_blank" rel="nofollow" href="https://xdebug.org/">Xdebug</a> es una extensión de PHP que apunta a ayudar en el\nproceso de depuración de sus aplicaciones. Xdebug ofrece características como:</p>\n<ul>\n<li>Seguimiento automático de la pila en caso de error</li>\n<li>Función de registro de llamadas</li>\n<li>Mostrar características como la salida var_dump () mejorada y la información\nde cobertura de código.</li>\n</ul>\n<p>Xdebug es altamente configurable y adaptable a una variedad de situaciones. Por\nejemplo, los seguimientos de la pila (que son extremadamente útiles para\nmonitorear qué está haciendo su aplicación y cuándo) se pueden configurar a\ncuatro niveles de detalle diferentes. Esto significa que puede ajustar la\nsensibilidad de la salida de Xdebug ayudándole a obtener información granular\nsobre la actividad de su aplicación.</p>\n<p>Los seguimientos de pila le muestran dónde ocurren los errores, le permiten\nrastrear llamadas a funciones y detallar los números de línea de origen de estos\neventos. Todo lo cual es información fantástica para depurar su código.</p>\n<p>Puedes echar un vistazo link\n<a target="_blank" rel="nofollow" href="https://xdebug.org/docs/install">a la guía de instalación de Xdebug</a> que se\nofrece en la página oficial.</p>\n<h2 id="instalación-xdebug">Instalación Xdebug</h2>\n<p>Para ello, necesitaremos descargar la versión de Xdebug, adecuada a nuestra\nversión de PHP. Hay que tener en cuenta que necesitaremos tener PHP 7.0 o\nsuperior.</p>\n<p>Empezaremos averiguando que versión de Xdebug nos corresponde para la\ninstalación de PHP de nuestra máquina. En este post utilizaremos Laragon pero\nfunciona igual si tienes instalado XAMPP el proceso es muy sencillo, tan solo\ntenemos que abrir el navegador y escribiremos en la barra de direcciones\nlocalhost, y en el menú de la página que aparecerá pulsaremos la opción de\nPHPInfo.</p>\n<p><img src="media/blog/Php/xdebug/1-localhostxdebug.png" alt="XdebugPhpinfo"></p>\n<h2 id="cómo-agregar-xdebug-a-laragon">Cómo agregar Xdebug a Laragon</h2>\n<p>Si tienes problemas en cargar esta pantalla puedes realizar los siguientes\npasos:</p>\n<ul>\n<li>En la barra de tareas de windows dale click al icono de Laragon.</li>\n<li>Selecciona PHP</li>\n<li>En el menú desplegable selecciona Quick Setting.</li>\n<li>Selecciona xdebug.</li>\n</ul>\n<p><img src="media/blog/Php/xdebug/1-xdebug.png" alt="LaragonXdebug"></p>\n<p>Aparecerá una advertencia indicando si necesitamos ayuda para agregar Xdebug a\nLaragon.</p>\n<p><img src="media/blog/Php/xdebug/2-xdebug.png" alt="LaragonXdebug2"></p>\n<p>Nota: al aceptar la advertencia nos redireccionará al siguiente\n<a target="_blank" rel="nofollow" href="https://forum.laragon.org/topic/264/tutorial-how-to-add-xdebug-to-laragon">Link</a>,\nen el cual nos muestra el método para agregar Xdebug a Laragon usando phpinfo()\ny asistente de Xdebug.</p>\n<h2 id="usando-de-phpinfo--y-asistente-de-xdebug">Usando de phpinfo () y asistente de Xdebug</h2>\n<p><img src="media/blog/Php/xdebug/3-xdebug.png" alt="LaragonXdebug3"></p>\n<ol>\n<li><p>Copie todo el contenido de phpinfo():</p>\n<p><a target="_blank" rel="nofollow" href="http://localhost/?Q=info">http://localhost/?Q=info</a></p>\n<p><img src="media/blog/Php/xdebug/4-xdebug.png" alt="LaragonXdebug4"></p>\n<blockquote>\n<p>Tips: Puedes Seleccionar toda la información con solo presionar <strong>Ctrl +\nA</strong>.</p>\n</blockquote>\n</li>\n<li><p>Pegue los datos copiados al formulario en la página del Asistente de Xdebug:</p>\n<p><a target="_blank" rel="nofollow" href="http://localhost/?Q=info">http://localhost/?Q=info</a></p>\n<p><img src="media/blog/Php/xdebug/5-xdebug.png" alt="LaragonXdebug5"></p>\n<blockquote>\n<p>Tips: Asegúrese de que al momento de pegar la información de phpInfo() en\nel formulario de Xdebug borrar los espacios al inicio y final.</p>\n</blockquote>\n</li>\n<li><p>Haga clic en <strong>&quot;Analyse my phpinfo() output.&quot;</strong></p>\n<p><img src="media/blog/Php/xdebug/6-xdebug.png" alt="LaragonXdebug6"></p>\n</li>\n<li><p>Una vez concluido estos pasos se nos muestra las instrucciones que\nnecesitaremos para usar la extensión Xdebug.</p>\n<p><img src="media/blog/Php/xdebug/7-xdebug.png" alt="LaragonXdebug7"></p>\n</li>\n<li><p>Tal y como nos sugiere debemos descargar la extensión de Xdebug (en mi caso\nseria la <strong>php_xdebug-2.6.1-7.2-vc15-x86_64.dll</strong>)</p>\n<p><img src="media/blog/Php/xdebug/8-xdebug.png" alt="LaragonXdebug8"></p>\n</li>\n<li><p>Mover o copiar la extensión descargada a la ruta que nos indica <strong>Extensions\ndirectory</strong> (en mi caso seria\n<strong>C:\\laragon\\bin\\php\\php-7.2.11-Win32-VC15-x64\\ext</strong>)</p>\n<p><img src="media/blog/Php/xdebug/9-xdebug.png" alt="LaragonXdebug9"></p>\n<blockquote>\n<p>Tips: Esta dirección puede variar según donde tengas instalado Laragon.</p>\n</blockquote>\n</li>\n<li><p>Ahora editaremos el fichero\n<strong>C:\\laragon\\bin\\php\\php-7.2.11-Win32-VC15-x64\\php.ini</strong>, y añadiremos al\nfinal las siguientes líneas.</p>\n<p><img src="media/blog/Php/xdebug/codigo.png" alt="LaragonXdebugCodigo"></p>\n<p><code>`[XDebug] xdebug.remote_enable = 1 xdebug.remote_autostart = 1 zend_extension=xdebug-2.6.1-7.2-vc15-x86_64`</code></p>\n<p><img src="media/blog/Php/xdebug/10-xdebug.png" alt="LaragonXdebug10"></p>\n</li>\n</ol>\n<blockquote>\n<p>Tips: el valor de zend_extension debe de ser el que nos indica la página de\nXdebug en sus instrucciones.</p>\n</blockquote>\n<p>Si tienes miedo de trastear el archivo de configuración de php.ini puedes\nrealizar los siguientes pasos explicados anterior mente el cual solo agregara la\nsiguiente linea <strong>zend_extension=xdebug-2.6.1-7.2-vc15-x86_64</strong> al archivo\nphp.ini:</p>\n<ol>\n<li>En la barra de tareas de windows dale click al icono de Laragon.</li>\n<li>Selecciona PHP</li>\n<li>En el menú desplegable selecciona Quick Setting.</li>\n<li>Selecciona Xdebug.</li>\n</ol>\n<p><img src="media/blog/Php/xdebug/1-xdebug.png" alt="LaragonXdebug1"></p>\n<ol start="8">\n<li><p>Para verificar que todo el proceso anterior ha tenido éxito, consultaremos\notra vez la opción de PHPInfo, y comprobaremos que en el texto que sale al\nlado de la imagen de <strong>zendengine</strong>, aparece <strong>“with Xdebug”</strong> tal y como se\nmuestra en la siguiente imagen (otra forma de comprobarlo es buscar el texto\nxdebug en esta página).</p>\n<p><img src="media/blog/Php/xdebug/11-xdebug.png" alt="LaragonXdebug11"></p>\n</li>\n</ol>\n<hr>\n<h2 id="configurando-visual-studio-code-para-depurar-código-php">Configurando Visual Studio Code para depurar código PHP</h2>\n<p>Una vez que hemos realizado la instalación de Xdebug ya podemos comenzar a\ndepurar nuestros código php con Visual Studio Code. Para ello debemos\nasegurarnos de tener instalado en este editor la extensión de “PHP Debug”.</p>\n<h2 id="instalación-de-phpdebug">Instalación de PhpDebug</h2>\n<p>Las extensiones las buscaremos usando el icono de <strong>Extensiones</strong> del menú de la\nizquierda con forma cuadrada pulsando en la caja de texto <strong>Php Debug</strong> y la\ninstalaremos.</p>\n<p><img src="media/blog/Php/xdebug/1-PhpDebug.png" alt="Phpdebug1"></p>\n<blockquote>\n<p>Tips: Una vez instalado, para asegurarnos de que funciona, pulsaremos el botón\nazul Recargar. Y si nos aparece, también pulsaremos el botón con el mensaje\n<strong>“Volver a cargar Window”</strong>.</p>\n</blockquote>\n<h2 id="configuración-de-phpdebug-en-visual-studio-code">Configuración de PhpDebug en Visual Studio Code</h2>\n<ol>\n<li><p>En este momento, es cuando abriremos nuestro proyecto (Archivo &gt; Abrir\nCarpeta).</p>\n</li>\n<li><p>Después, accederemos a la Vista de depuración:</p>\n<p><img src="media/blog/Php/xdebug/2-PhpDebug.png" alt="Phpdebug2"></p>\n</li>\n</ol>\n<blockquote>\n<p>Tips: Para abrir la vista de depuración, haga clic en el ícono de depuración\nen la barra de actividad en el lado de Código VS. También puede utilizar la\ncombinación de teclas <strong>Ctrl + Shift + D</strong>.</p>\n</blockquote>\n<ol start="3">\n<li><p>Luego agregaremos una configuración para depurar PHP con Xdebug.</p>\n<p><img src="media/blog/Php/xdebug/4-PhpDebug.png" alt="Phpdebug3"></p>\n<blockquote>\n<p>Tips: En la parte superior hay un selector (2), y a su lado, un engranaje.</p>\n</blockquote>\n<blockquote>\n<p>Al pulsar en el selector nos pedirá que indiquemos el lenguaje a depurar\n(3).</p>\n</blockquote>\n</li>\n<li><p>Seleccionaremos el lenguaje a configurar en este caso Php.</p>\n<p><img src="media/blog/Php/xdebug/5-PhpDebug.png" alt="Phpdebug4"></p>\n</li>\n<li><p>Se abrirá el archivo <strong>launch.json</strong> y mostrara unas líneas de código por\ndefecto, que dejaremos tal cual</p>\n<p><img src="media/blog/Php/xdebug/6-PhpDebug.png" alt="Phpdebug5"></p>\n</li>\n<li><p>En nuestro código PHP, agregaremos puntos de interrupción haciendo click a\nla izquierda del número de línea. Veremos cómo aparecen puntitos rojos en\ncada línea esto son puntos de interrupción.</p>\n<p><img src="media/blog/Php/xdebug/7-PhpDebug.png" alt="Phpdebug6"></p>\n</li>\n<li><p>En el archivo setting.json agrega el siguiente código.</p>\n<p><img src="media/blog/Php/xdebug/configPHP.png" alt="Phpdebug7"></p>\n</li>\n<li><p>Pulsamos el botón de Iniciar depuración, y después abrimos el navegador con\nla dirección de nuestra página a depurar.</p>\n<p><img src="media/blog/Php/xdebug/9-PhpDebug.png" alt="Phpdebug8"></p>\n</li>\n</ol>\n<p>Cuando el navegador empiece a cargar la página, Visual Studio Code tomará el\ncontrol y nos permitirá ir depurando paso a paso usando las típicas herramientas\nde depuración.</p>\n<p>Al añadir la configuración para la depuración, Visual Studio Code habrá creado\nuna carpeta .vscode dentro de la carpeta de nuestro proyecto con la\nconfiguración de para la depuración. A partir de entonces, cada vez que abramos\nnuestro proyecto, tan solo tendremos que ir a la opción de depuración, poner\nalgún punto de interrupción y darle a la flecha verde. Si por error borramos esa\ncarpeta, tendremos que volver a repetir los pasos para volver a añadir la\nconfiguración.</p>\n<h2 id="conclusiones">Conclusiones</h2>\n<p>¡Listos para depurar código PHP!</p>\n',date:"2019-01-03T07:08:02.000-07:00",feature_image:"media/blog/Php/xdebug/bannerPhpXdebug.png",excerpt:"",printDate:"January 3, 2019",printReadingTime:"6 min read"},{title:"C# - Marca de Agua en un TextEdit -> CueProvider!",slug:"segundo-advientocsharp",html:'\x3c!-- ![Acordeon](media/blog/CSharp/cshar.png) --\x3e\n\n<blockquote>\n<p>Este artículo hace parte de una iniciativa genial: del segundo calendario de\nadviento de C# español. Cada día, dos artículos nuevos sobre C# serán\ncompartidos por la comunidad. Esta es mi contribución.</p>\n</blockquote>\n<p>La programación es sin duda un mundo lleno de aventuras, en donde el programador\nes quien define los limites de su inmaginación, y durante todo este tiempo me he\ntopado con retos tras retos y en este artículo quiero contarte de sobre una\nclase que he ocupado en mis proyectos.</p>\n<h2 id="marca-de-agua-en-un-textedit---cueprovider">Marca de Agua en un TextEdit - CueProvider</h2>\n<p>La idea conciste mostrar un texto en un cuadro de texto antes de poder editarlo\ncomo forma de marca de agua o parcialmente transparentes, suelen usarse en los\nform de Login, para indicar el ingreso de un tipo de dato.</p>\n<p><img src="media/blog/CSharp/TextEdit/1-TxtEdit.png" alt="WinForms Marca de agua"></p>\n<p>Como desarrolladores de aplicaciones modernas esto nos ayudara en nuestras\nimplementaciones de WindosForm, para lo cual utilizaremos CueProvideres una\nclase pequeña que le permite establecer un banner como una marca de agua (el\ntexto de aviso gris que desaparece automáticamente cuando comienza a escribir)\nen un TextBoxcontrol.</p>\n<h2 id="clase-cueprovider">Clase CueProvider</h2>\n<ul>\n<li>Referencias</li>\n</ul>\n<blockquote>\n<p>using DevExpress.XtraEditors; using System; using\nSystem.Runtime.InteropServices; using System.Windows.Forms;</p>\n</blockquote>\n<ul>\n<li><p>Codigo</p>\n<p>Clase para poner texto en forma de Marca de Agua a un Texbox. Proporciona\nindicaciones textuales a un cuadro de texto.</p>\n<p><img src="media/blog/CSharp/TextEdit/carbon.png" alt="code"></p>\n</li>\n</ul>\n<h2 id="cómo-usar-cueprovider">Cómo usar CueProvider</h2>\n<ul>\n<li>CueProvideres fácil de usar y tiene solo dos métodos: uno para establecer\nTextBox el texto de referencia de una, el otro para borrarlo. Para\nconfigurar el texto de referencia, llame <strong>SetCue();</strong> para limpiarlo, llame\n<strong>ClearCue()</strong>. Estas llamadas se colocan mejor en el <strong>OnLoadcontrolador</strong>\nde su formulario .</li>\n</ul>\n<blockquote>\n<p>Example: CueProvider.SetCue(TxtEmail.MaskBox, &quot; <a target="_blank" rel="nofollow" href="mailto:Example@example.gob.ni">Example@example.gob.ni</a>&quot;);</p>\n</blockquote>\n<h2 id="cómo-funciona">Cómo Funciona</h2>\n<p><strong>CueProvider</strong> funciona enviando TextBox el <strong>EM_SETCUEBANNER</strong> mensaje. El\nmensaje se envía usando la <strong>SendMessage()</strong> API Win32. <strong>EM_SETCUEBANNER</strong>\nPuede encontrar más información sobre el mensaje en esta página de MSDN.</p>\n<h2 id="conclusiones">Conclusiones</h2>\n<p>Como puede ver, no hay nada demasiado complicado en esta clase. Lo CueBanner\nreuní en unos minutos y quería compartirlo con la comunidad en el calendario de\nAviento de C# con la esperanza de que pudiera ayudar a nuestras aplicaciones de\nescritorio y pulir un pocco nuestra interfaz de usuario.</p>\n<p>C# es un lenguaje muy excepcional con muchísimas funcionalidades por descubrir.</p>\n<p>Y tú, ¿Considerarías usar esta clase en tu próxima aplicación?</p>\n<h2 id="agradecimimento">Agradecimimento</h2>\n<p>Un Agradecimiento especial a los organizadores del segundo <strong>#advientocsharp</strong>\nen español, por darme la oportunidad de ser parte de esta evento, esperando que\neste articulos sea de sua agrado me despido.</p>\n<h2 id="fuentes-externas">Fuentes externas.</h2>\n<p>He tomado parte de la información mostrada en esta publicación del siguiente\nenlace <a target="_blank" rel="nofollow" href="https://www.codeproject.com/Articles/27853/CueProvider">CueProvider</a></p>\n',date:"2019-12-09T09:47:12.000-07:00",feature_image:"media/blog/CSharp/csharp.png",excerpt:"",printDate:"December 9, 2019",printReadingTime:"3 min read"},{title:"Xamarin - Conectar un Dispositivo para probar Apps!",slug:"xamarin-conectar-un-dispositivo-para-probar-apps",html:'\x3c!-- ![Post Xamarin](media\\blog\\Xamarin\\Debug\\How-to-Debug-Xamarin-Application-on-Visual-Studio-660x420.png) --\x3e\n\n<blockquote>\n<p>Este artículo hace parte de una iniciativa genial: del primer calendario de\nXamarin en español. Cada día, dos artículos nuevos sobre C# serán compartidos\npor la comunidad. Esta es mi contribución.</p>\n</blockquote>\n<p>Conozco de vista Xamarin desde que era parte del Proyecto Mono, pero siempre me\ndio miedo trastearlo aún cuando ya se habia convertido en Xamarin, pero hasta\nhace poco he comenzado a practicarlo, practicas que van desde conectar a azure,\nfirebase, o bases de datos internas LiteDB, entre muchas cosas más por lo cual\nestoy convencido que me falta mucho por aprender.</p>\n<p>Pero en este articulo quisiera mostrarle algo que seguro todos los expertos ya\nsaben, pero que los novatos como yo batallamos mucho al iniciar en Xamarin y es\nel tratar de conectar nuestro dispositivo ya sea un celular, tablet, etc, para\nver como se miran nuestras apps en el dispositivo, aunque tengamos un emulador,\nnosotros queremos quitarnos las ganas de ver nuestra app en el dispositivo, asi\nque vamos a darle..</p>\n<h2 id="conectar-tu-celular-para-probar-apps">Conectar tu Celular para probar Apps</h2>\n<p>Bueno para iniciar cuando ya tenemos nuestro proyecto cargado, en la parte\nsuperior donde se encuentran las opciones de debug popdras ver que solo\nencontran las opciones de compilación con simulador que trae integrado Visual\nStudio.</p>\n<p><img src="media%5Cblog%5CXamarin%5CDebug%5Cdev-1.png" alt="Debug Simulador"></p>\n<h2 id="activar-modo-desarrollador-y-depuración-usb">Activar Modo Desarrollador y Depuración USB</h2>\n<p>Para poder conectar nuestro dispositivo, primeros debemos ir a ajustes &gt; Acerca\ndel télefono y debes de seleccionar <strong>Versión MIUI</strong> varias veces hasta que te\nsalga que ya eres un programador.</p>\n<p><img src="media%5Cblog%5CXamarin%5CDebug%5Cdev-2.gif" alt="Activar modo desarrrollador"></p>\n<p>Luego busca el menu de <strong>Opciones de Desarrollador</strong> que se te acaba de activar,\nen las opciones de desarrollador activa el modo de <strong>depuración USB e Instalar\nvía USB</strong>, en mi caso lo encontre en Ajuste adicionales, cabe mencionar que\nestoy usando un Redmi Note 8 Pro.</p>\n<p><img src="media%5Cblog%5CXamarin%5CDebug%5Cdev-3.png" alt="Activar depuración USB"></p>\n<blockquote>\n<p>Nota: al Activar la depuración, te aparecera un mensaje emergente\npreguntandote si te gustaria activar la depuración USB, dale aceptar.</p>\n</blockquote>\n<p>Una vez realizado todo los pasos anteriores, ve a tu proyecto de Xamarin y\nrevisa la opciones de debug, y veras seleccionado tu dispositivo listo para\nhacer tus pruebas.</p>\n<h2 id="compilar-e-instalar-nuestra-apps-en-el-dispositivo">Compilar e Instalar nuestra Apps en el dispositivo</h2>\n<p><img src="media%5Cblog%5CXamarin%5CDebug%5Cdev-4.png" alt="Debugactivado"></p>\n<p>Una vez que corras tu proyecto en tu dispositivo se mostrara un mensaje\nemergente indicando si quieres instalar una nueva app con el nombre de tu\nproyecto.</p>\n<p><img src="media%5Cblog%5CXamarin%5CDebug%5Cdev-5.jpg" alt="Activar depuración USB"></p>\n<p>Seguido en tu dispositivo aparece el logo de Xamarin indicando que tu app se ha\ninstalado.</p>\n<p><img src="media%5Cblog%5CXamarin%5CDebug%5Cdev-6.png" alt="Activar depuración USB"></p>\n<h2 id="conclusiones">Conclusiones</h2>\n<p>Como puede ver, no es demasiado complicado pero que si resulta un dolor de\ncabeza cuando estas iniciando, espero les ayude y compartan para que más\npersonas conozcan el mundo de Xamarin.</p>\n<p>Buenos eso ha sido todo ppara este post, nos vemos en el siguiente.</p>\n<p><img src="media%5Cblog%5CXamarin%5CDebug%5Cxamarin-visualStudio.png" alt="Xamarin"></p>\n<h2 id="agradecimimento">Agradecimimento</h2>\n<p>Un Agradecimiento especial a los organizadores del primer <strong>#AdvientoXamarin</strong>\nen español en especial a <strong>@Luis Beltran</strong> por alentarnos a publicar lo poco que\nsabemos y por darme la oportunidad de ser parte de esta evento esperando un día\nconocerlo en persona y estrechar su mano.</p>\n<p>Esperando que este articulos sea de sua agrado me despido.</p>\n',date:"2019-12-18T07:08:02.000-07:00",feature_image:"media/blog/Xamarin/How-to-Debug-Xamarin-Application-on-Visual-Studio-660x420.png",excerpt:"",printDate:"December 18, 2019",printReadingTime:"3 min read"},{title:"¿Qué es? - Xamarin - Xamarin.Forms - Xamarin MAUI",slug:"xamarin-forms-maui",html:'<p><img src="media/blog/Xamarin/MAUI/Xamarin-MAUI.png" alt="Post Xamarin"></p>\n<blockquote>\n<p>Este artículo hace parte de una iniciativa genial: del segundo calendario de Xamarin en español. Cada día, dos artículos nuevos sobre C# serán compartidos por la comunidad. Esta es mi contribución.</p>\n</blockquote>\n<p>Como un verdadero principiante en el tema de Xamarin, durante toda la evolución de Xamarin, me ha costado entender la difetencia entre Xamarin y Xamarin.Forms y por si fuera poco ahora se suma Xamarin MAUI, por lo cual este árticulo va de eso, entender de una manera simple las 3 siguientes interrogantes:</p>\n<ul>\n<li>¿Qué es Xamarin?</li>\n<li>¿Qué es Xamarin.Forms?</li>\n<li>¿Qué es Xamarin MAUI?</li>\n</ul>\n\x3c!-- # **¿Qué es Xamarin?** --\x3e\n\n<h2 id="¿qué-es-xamarin"><strong>¿Qué es Xamarin?</strong></h2>\n<p><strong>Xamarin Native</strong> Es lo más parecido a programar en nativo que puede haber pero utilizando para la lógica el lenguaje C# en lugar de los equivalentes nativos de iOS (Objective-C, Swift), Android (Java, Kotlin) u otros.</p>\n<p>La creación de vistas es similar a las nativas utilizando Storyboards y XML. Se aplica el patrón MVVM siendo muy extendido para ello el uso de la librería MvvmCross. se aplica XAML para las vistas lo cual consigue compilar de manera nativa para múltiples plataformas (iOS, Android, WP8, UWP, Mac…).</p>\n<p>Por ejemplo si usas xamarin android, es muy similar a usar java con android studio; el comportamiento del editor, actividades, framents etc. Es casi lo mismo solo que con c#.</p>\n<p>Si usa Xamarin IOS tendras algo parecido como se trabajaraa en entorno nativo para el Iphone pero usando c#.</p>\n<p>La ventaja es que puedes compartir lógica (acceso a datos, consumo de api) así no la tendrás que hacer lo mismo para cada plataforma. Pero la parte visual si debe hacerlo 2 veces (Una para android y una para IOS).</p>\n<p>Xamarin le permite crear aplicaciones nativas para Android, iOS y macOS mediante un código .NET y las interfaces de usuario específicas de plataforma.</p>\n<p><img src="media/blog/Xamarin/MAUI/xamarin-architecture.png" alt="ArquitecturaXamarin"></p>\n<p>En este diagrama se muestra la arquitectura general de una aplicación Xamarin multiplataforma. Xamarin permite crear una interfaz de usuario nativa en cada plataforma y escribir lógica de negocios en C# que se comparte entre plataformas.</p>\n<p>Una vez entendido este apartado, pasamos al siguiente punto:</p>\n<h2 id="¿qué-es-xamarinforms"><strong>¿Qué es Xamarin.Forms?</strong></h2>\n<p>Xamarin.Forms es la evolución de Xamarin Native la cual permite crear aplicaciones nativas, con código de interfaz de usuario compartido, escrito en C# o XAML.</p>\n<p>Xamarin.Forms es un marco de interfaz de usuario de código abierto y permite a los desarrolladores compilar aplicaciones en Xamarin.Android, Xamarin.iOS y Windows desde un único código base compartido ademas le permite a los desarrolladores crear interfaces de usuario en XAML con código subyacente en C#. Estas interfaces se representan como controles nativos con mejor rendimiento en cada plataforma.</p>\n<p>En pos de minimizar el tiempo del desarrollo surge esta herramienta que maximiza la cantidad de código compartido entre plataformas. Con ella el código común no es solo para tareas aisladas sino que es posible diseñar todas la funcionalidades y vistas de la aplicación. Sería similar a desarrollar aplicaciones híbridas pero con resultados nativos. Con lenguaje C# para la lógica y XAML para las vistas.</p>\n<p>En este caso el patrón MVVM con two-way data binding está perfectamente integrado sin necesidad de usar librerías externas.</p>\n<p><img src="media/blog/Xamarin/MAUI/xamarin-forms-architecture.png" alt="ArquitecturaXamarin"></p>\n<p>En este diagrama se muestra la arquitectura general de una aplicación Xamarin.Forms multiplataforma. Xamarin.Forms proporciona una API coherente para crear elementos de interfaz de usuario entre plataformas. Esta API se puede implementar en XAML o C#, y admite el enlace de datos para patrones como Model-View-ViewModel (MVVM).</p>\n<p><img src="media/blog/Xamarin/MAUI/xamarin-compare.png" alt="Post Xamarin"></p>\n<blockquote>\n<p>Comparativa entre Xamarin Native y Xamarin.Forms</p>\n</blockquote>\n<h2 id="¿qué-es-xamarin-maui"><strong>¿Qué es Xamarin MAUI?</strong></h2>\n<p>MAUI podriamos decir que es el acronimo de <strong>Multi-platform App UI</strong> pero esencialmente es la próxima evolución de Xamarin.Forms evolución que aun esta en desarrollo y formara parte de .Net6, este se trata de un framework que nos permitirá crear interfaces de usuario nativas para escritorio y dispositivos móviles, y lo más sorprendente de esto es que cuenta con una sola base de código y un único proyecto. Es decir, ¡no más cabezales distintos para cada SO móvil (iOS y Android)! Junto a MVVM, Maui también admitirá el nuevo y emocionante patrón de diseño MVU (Model-View-Update), también conocido como The Elm Architecture, el cual obtendrá el soporte de Blazor.</p>\n<p>MAUI es un renovado Xamarin.Forms con características similares, el cual tendrá mayor soporte, y Xamarin Nativo (iOS-Android) no cambiará su estructura, solo el nombre en la versión .NET 6, así mismo deberá adaptarse a una nueva gama de bibliotecas de clases de bindings principalmente.</p>\n<p>Con la llegada de MAUI pasaremos a tener un único proyecto. Así mismo podremos elegir el despliegue entre diferentes dispositivos o emuladores aunque tengamos un único proyecto. Y ¿qué ocurre con los recursos de la aplicación como las imágenes? El tooling gestionará fuentes compartidas en cada plataforma así como la gestión y creación de imágenes adaptadas a cada plataforma.</p>\n<p><img src="media/blog/Xamarin/MAUI/maui-01-overview.png" alt="Post Xamarin"></p>\n<h2 id="¿qué-pasa-con-xamarin-y-¿dónde-deja-el-desarrollo-xamarinnative-xamarinios-y-xamarinandroid"><strong>¿Qué pasa con Xamarin? y ¿Dónde deja el desarrollo Xamarin.Native (Xamarin.iOS y Xamarin.Android)?</strong></h2>\n<p>Pues no pasa nada de momento. Seguirá siendo la plataforma oficial para crear aplicaciones móviles y podrás crear aplicaciones de escritorio también usando los proyectos de la comunidad. Sacarán nuevas versiones cada 6 semanas como hasta ahora.</p>\n<p>Ambos se incorporarán a la plataforma .NET 6 y se renombrarán a .NET para iOS y .NET para Android, respectivamente. También obtendrán soporte de CLI: dotnet new ios y dotnet new android, haciendo que el desarrollo sea aún más rápido.</p>\n<h2 id="conclusiones"><strong>Conclusiones</strong></h2>\n<p>Como puede ver, no es demasiado complicado pero que si resulta un dolor de cabeza cuando estas iniciando, espero les ayude y compartan para que más personas conozcan el mundo de Xamarin.</p>\n<p>Buenos eso ha sido todo ppara este post, nos vemos en el siguiente.</p>\n<h2 id="agradecimimento"><strong>Agradecimimento</strong></h2>\n<p>Un Agradecimiento especial a los organizadores del segundo\n<strong><a target="_blank" rel="nofollow" href="https://www.luisbeltran.mx/2020/11/16/segundo-calendario-de-adviento-de-xamarin-en-espanol/?fbclid=IwAR2u3F4mTPj_WffRTmK5U3IHVcSiSyPUbwbuTxvOk2lWmHyVZO5zvA67wFU">#AdvientoXamarin</a></strong> en español en especial a <strong><a target="_blank" rel="nofollow" href="https://www.facebook.com/groups/1787797968167722/user/100001759697510/">@LuisBeltran</a></strong> por alentarnos a publicar lo poco que sabemos y por darme la oportunidad de ser parte de esta evento esperando un día conocerlo en persona y tomarnos un café.</p>\n<p>Esperando que este articulos sea de sua agrado me despido.</p>\n<h2 id="más-información"><strong>Más Información:</strong></h2>\n<p>Parte de la información mostrada en este blog es una recopilación de varias fuentes mostradas en los siguientes links, por si deseas profundizar un poco mas del tema</p>\n<h3 id="blog-de-vicenteguzmanmx">Blog de <a target="_blank" rel="nofollow" href="https://vicenteguzman.mx/2020/05/21/adios-xamarin-forms-hola-maui/">vicenteguzman.mx</a>.</h3>\n<h3 id="blog-de-hiberuscom">Blog de <a target="_blank" rel="nofollow" href="https://www.hiberus.com/crecemos-contigo/xamarin-desarrollo-multiplataforma-nativo/#:~:text=Xamarin%20es%20un%20entorno%20de%20desarrollo%20de%20apps,para%20m%C3%BAltiples%20plataformas%20%28iOS%2C%20Android%2C%20WP8%2C%20UWP%2C%20Mac%E2%80%A6%29.">hiberus.com</a>.</h3>\n<h3 id="¿qué-es-xamarin-docsmicrosoftcom">¿Qué es Xamarin? <a target="_blank" rel="nofollow" href="https://docs.microsoft.com/es-es/xamarin/get-started/what-is-xamarin">docs.microsoft.com</a>.</h3>\n<h3 id="¿qué-es-xamarinforms-docsmicrosoftcom">¿Qué es Xamarin.Forms? <a target="_blank" rel="nofollow" href="https://docs.microsoft.com/es-es/xamarin/get-started/what-is-xamarin-forms">docs.microsoft.com</a>.</h3>\n<p><img src="media/blog/Xamarin/MAUI/Que-es-xamarin.png" alt="Post Final Xamarin"></p>\n',date:"2020-12-25T07:08:02.000-07:00",feature_image:"media/blog/Xamarin/MAUI/XAMARIN.png",excerpt:"",printDate:"December 25, 2020",printReadingTime:"6 min read"}].map(e=>({...e,html:e.html.replace(/^\t{3}/gm,"")})).sort((e,a)=>new Date(a.date)-new Date(e.date));function re(e,a,o){const n=Object.create(e);return n.post=a[o],n}function se(e,a,o){const n=Object.create(e);return n.element=a[o],n}function te(e){for(var a,o,n,i,d,p=e.temary,m=[],g=0;g<p.length;g+=1)m[g]=ie(se(e,p,g));return{c(){a=u("div"),o=u("h3"),n=E("Temario"),i=v(),d=u("ul");for(var e=0;e<m.length;e+=1)m[e].c();this.h()},l(e){a=r(e,"DIV",{class:!0},!1);var l=s(a);o=r(l,"H3",{},!1);var c=s(o);n=A(c,"Temario"),c.forEach(t),i=A(l,"\r\n      "),d=r(l,"UL",{class:!0},!1);for(var p=s(d),u=0;u<m.length;u+=1)m[u].l(p);p.forEach(t),l.forEach(t),this.h()},h(){d.className="Temary-list svelte-1acheyc",a.className="Temary-container"},m(e,r){l(e,a,r),c(a,o),c(o,n),c(a,i),c(a,d);for(var s=0;s<m.length;s+=1)m[s].m(d,null)},p(e,a){if(e.temary){p=a.temary;for(var o=0;o<p.length;o+=1){const n=se(a,p,o);m[o]?m[o].p(e,n):(m[o]=ie(n),m[o].c(),m[o].m(d,null))}for(;o<m.length;o+=1)m[o].d(1);m.length=p.length}},d(e){e&&t(a),q(m,e)}}}function ie(e){var a,o,n,i,d=e.element.innerText;function p(){return e.click_handler(e)}return{c(){a=u("li"),o=u("p"),n=E(d),this.h()},l(e){a=r(e,"LI",{class:!0},!1);var i=s(a);o=r(i,"P",{class:!0},!1);var l=s(o);n=A(l,d),l.forEach(t),i.forEach(t),this.h()},h(){o.className="svelte-1acheyc",a.className="svelte-1acheyc",m(a,"active",e.element.isActive),i=g(a,"click",p)},m(e,r){l(e,a,r),c(a,o),c(o,n)},p(o,r){e=r,o.temary&&d!==(d=e.element.innerText)&&S(n,d),o.temary&&m(a,"active",e.element.isActive)},d(e){e&&t(a),i()}}}function le(e){var a,o=new oe({props:{post:e.post}});return{c(){o.$$.fragment.c()},l(e){o.$$.fragment.l(e)},m(e,n){f(o,e,n),a=!0},p(e,a){var n={};e.recommendedPosts&&(n.post=a.post),o.$set(n)},i(e){a||(o.$$.fragment.i(e),a=!0)},o(e){o.$$.fragment.o(e),a=!1},d(e){o.$destroy(e)}}}function ce(e){for(var a,o,n,i,d,p,g,h,b,f,S,P=e.showTemary&&te(e),k=e.recommendedPosts,w=[],z=0;z<k.length;z+=1)w[z]=le(re(e,k,z));function R(e,a,o){w[e]&&(a&&T(()=>{w[e].d(a),w[e]=null}),w[e].o(o))}return{c(){a=u("div"),o=u("div"),P&&P.c(),n=v(),i=u("div"),d=u("h3"),p=E("Otras publicaciones"),g=v();for(var e=0;e<w.length;e+=1)w[e].c();h=v(),b=u("div"),f=u("iframe"),this.h()},l(e){a=r(e,"DIV",{class:!0},!1);var l=s(a);o=r(l,"DIV",{class:!0},!1);var c=s(o);P&&P.l(c),n=A(c,"\r\n    "),i=r(c,"DIV",{class:!0},!1);var u=s(i);d=r(u,"H3",{},!1);var m=s(d);p=A(m,"Otras publicaciones"),m.forEach(t),g=A(u,"\r\n      ");for(var v=0;v<w.length;v+=1)w[v].l(u);u.forEach(t),c.forEach(t),h=A(l,"\r\n  "),b=r(l,"DIV",{},!1);var E=s(b);f=r(E,"IFRAME",{src:!0,style:!0,height:!0,title:!0},!1),s(f).forEach(t),E.forEach(t),l.forEach(t),this.h()},h(){i.className="Post-container",o.className="Sidebar svelte-1acheyc",m(o,"sticky",e.isStickySidebar),f.src="https://ko-fi.com/erickmarcia/?hidefeed=true&widget=true&embed=true⪯view=true",y(f,"border","none"),y(f,"width","100%"),y(f,"padding","4px"),y(f,"background","#f9f9f9"),f.height="712",f.title="erickmarcia",a.className="Sidebar-container svelte-1acheyc"},m(e,r){l(e,a,r),c(a,o),P&&P.m(o,null),c(o,n),c(o,i),c(i,d),c(d,p),c(i,g);for(var s=0;s<w.length;s+=1)w[s].m(i,null);c(a,h),c(a,b),c(b,f),S=!0},p(e,a){if(a.showTemary?P?P.p(e,a):((P=te(a)).c(),P.m(o,n)):P&&(P.d(1),P=null),e.recommendedPosts){k=a.recommendedPosts;for(var r=0;r<k.length;r+=1){const o=re(a,k,r);w[r]?(w[r].p(e,o),w[r].i(1)):(w[r]=le(o),w[r].c(),w[r].i(1),w[r].m(i,null))}for(C();r<w.length;r+=1)R(r,1,1);x()}e.isStickySidebar&&m(o,"sticky",a.isStickySidebar)},i(e){if(!S){for(var a=0;a<k.length;a+=1)w[a].i();S=!0}},o(e){w=w.filter(Boolean);for(let e=0;e<w.length;e+=1)R(e,0);S=!1},d(e){e&&t(a),P&&P.d(),q(w,e)}}}function de(e,a,o){let{currentPost:n,temary:r,isStickySidebar:s,onTemaryClick:t,showTemary:i}=a,l=[];return e.$set=e=>{"currentPost"in e&&o("currentPost",n=e.currentPost),"temary"in e&&o("temary",r=e.temary),"isStickySidebar"in e&&o("isStickySidebar",s=e.isStickySidebar),"onTemaryClick"in e&&o("onTemaryClick",t=e.onTemaryClick),"showTemary"in e&&o("showTemary",i=e.showTemary)},e.$$.update=(e={currentPost:1})=>{e.currentPost&&o("recommendedPosts",l=ne.filter(e=>e.title!==n.title).slice(0,1))},{currentPost:n,temary:r,isStickySidebar:s,onTemaryClick:t,showTemary:i,recommendedPosts:l,click_handler:function({element:e}){return t(e.innerText)}}}class pe extends e{constructor(e){super(),a(this,e,de,ce,o,["currentPost","temary","isStickySidebar","onTemaryClick","showTemary"])}}const ue=(e,a,o)=>{"undefined"!=typeof window&&gtag&&gtag("event",e,{event_category:a,event_label:o})};function me(e){var a,o,n,i,p,m,h,b,y,S,P,q,x,T,C=new k({props:{size:"24",class:"twitter-icon",currentColor:"yellow"}}),z=new V({props:{size:"24"}});return{c(){a=u("div"),C.$$.fragment.c(),o=v(),n=u("p"),i=E("Compartir"),p=v(),m=u("span"),h=E("|"),b=v(),y=u("div"),z.$$.fragment.c(),S=v(),P=u("p"),q=E("Comentar"),this.h()},l(e){a=r(e,"DIV",{class:!0},!1);var l=s(a);C.$$.fragment.l(l),o=A(l,"\r\n  "),n=r(l,"P",{class:!0},!1);var c=s(n);i=A(c,"Compartir"),c.forEach(t),l.forEach(t),p=A(e,"\r\n"),m=r(e,"SPAN",{class:!0},!1);var d=s(m);h=A(d,"|"),d.forEach(t),b=A(e,"\r\n"),y=r(e,"DIV",{class:!0},!1);var u=s(y);z.$$.fragment.l(u),S=A(u,"\r\n  "),P=r(u,"P",{class:!0},!1);var g=s(P);q=A(g,"Comentar"),g.forEach(t),u.forEach(t),this.h()},h(){n.className="svelte-3oea21",a.className="Twitter-container svelte-3oea21",m.className="limiter svelte-3oea21",P.className="svelte-3oea21",y.className="Comment-button svelte-3oea21",T=[g(a,"click",e.shareViaTwitter),g(y,"click",e.goToCommentArea)]},m(e,r){l(e,a,r),f(C,a,null),c(a,o),c(a,n),c(n,i),l(e,p,r),l(e,m,r),c(m,h),l(e,b,r),l(e,y,r),f(z,y,null),c(y,S),c(y,P),c(P,q),x=!0},p:d,i(e){x||(C.$$.fragment.i(e),z.$$.fragment.i(e),x=!0)},o(e){C.$$.fragment.o(e),z.$$.fragment.o(e),x=!1},d(e){e&&t(a),C.$destroy(),e&&(t(p),t(m),t(b),t(y)),z.$destroy(),w(T)}}}function ge(e,a,o){let{text:n,postUrl:r,hashtags:s,twitterUsername:t,related:i,commentsElement:l}=a;let c,d;return e.$set=e=>{"text"in e&&o("text",n=e.text),"postUrl"in e&&o("postUrl",r=e.postUrl),"hashtags"in e&&o("hashtags",s=e.hashtags),"twitterUsername"in e&&o("twitterUsername",t=e.twitterUsername),"related"in e&&o("related",i=e.related),"commentsElement"in e&&o("commentsElement",l=e.commentsElement)},e.$$.update=(e={text:1,postUrl:1,hashtags:1,twitterUsername:1,related:1,query:1})=>{(e.text||e.postUrl||e.hashtags||e.twitterUsername||e.related)&&o("query",c=[n&&"text="+encodeURIComponent(n),r&&"url="+encodeURIComponent(r),s&&"hashtags="+s,t&&"via="+encodeURIComponent(t),i&&"related="+encodeURIComponent(i)].filter(Boolean).join("&")),e.query&&(d="https://twitter.com/intent/tweet?"+c)},{text:n,postUrl:r,hashtags:s,twitterUsername:t,related:i,commentsElement:l,shareViaTwitter:()=>{ue("social","social-toolbox","share-twitter-click");const e=`width=600,height=400,left=${(screen.width-600)/2},top=${(screen.height-400)/2}`;window.open(d,"_blank",e)},goToCommentArea:()=>{ue("social","social-toolbox","comment-click"),l.scrollIntoView({behavior:"smooth",block:"start"})}}}class he extends e{constructor(e){super(),a(this,e,ge,me,o,["text","postUrl","hashtags","twitterUsername","related","commentsElement"])}}function be(e){var a,o,n,i,p,m,g,h,b,f,y,S,P,q,x,T,C,k,w,z,R;return{c(){a=u("hr"),o=v(),n=u("div"),i=u("img"),p=v(),m=u("p"),g=E("Hola, Soy "),h=u("strong"),b=E("Erick Marcia"),f=E(". Ingeniero de Software y MCSA certificado por Microsoft, vivo en Granada -\r\n    Nicaragua.\r\n    Puedes seguirme en "),y=u("a"),S=E("Twitter"),P=E(",\r\n    ver algunos de mis trabajos en "),q=u("a"),x=E("GitHub"),T=E(",\r\n    o leer más sobre mí en "),C=u("a"),k=E("my website"),w=E("."),z=v(),R=u("hr"),this.h()},l(e){a=r(e,"HR",{},!1),s(a).forEach(t),o=A(e,"\r\n"),n=r(e,"DIV",{class:!0},!1);var l=s(n);i=r(l,"IMG",{src:!0,alt:!0,class:!0},!1),s(i).forEach(t),p=A(l,"\r\n  "),m=r(l,"P",{class:!0},!1);var c=s(m);g=A(c,"Hola, Soy "),h=r(c,"STRONG",{},!1);var d=s(h);b=A(d,"Erick Marcia"),d.forEach(t),f=A(c,". Ingeniero de Software y MCSA certificado por Microsoft, vivo en Granada -\r\n    Nicaragua.\r\n    Puedes seguirme en "),y=r(c,"A",{href:!0,target:!0},!1);var u=s(y);S=A(u,"Twitter"),u.forEach(t),P=A(c,",\r\n    ver algunos de mis trabajos en "),q=r(c,"A",{href:!0,target:!0},!1);var v=s(q);x=A(v,"GitHub"),v.forEach(t),T=A(c,",\r\n    o leer más sobre mí en "),C=r(c,"A",{href:!0,target:!0},!1);var E=s(C);k=A(E,"my website"),E.forEach(t),w=A(c,"."),c.forEach(t),l.forEach(t),z=A(e,"\r\n"),R=r(e,"HR",{},!1),s(R).forEach(t),this.h()},h(){i.src="/media/about-me/profile.png",i.alt="Erick Marcia",i.className="svelte-5qew12",y.href="https://www.twitter.com/Emarcia14",y.target="_blank",q.href="https://www.github.com/erickmarcia",q.target="_blank",C.href="https://erickmarcia.github.io/",C.target="_blank",m.className="svelte-5qew12",n.className="svelte-5qew12"},m(e,r){l(e,a,r),l(e,o,r),l(e,n,r),c(n,i),c(n,p),c(n,m),c(m,g),c(m,h),c(h,b),c(m,f),c(m,y),c(y,S),c(m,P),c(m,q),c(q,x),c(m,T),c(m,C),c(C,k),c(m,w),l(e,z,r),l(e,R,r)},p:d,i:d,o:d,d(e){e&&(t(a),t(o),t(n),t(z),t(R))}}}class fe extends e{constructor(e){super(),a(this,e,null,be,o,[])}}const ve=()=>{let e=document,a=e.createElement("script");a.src="https://erickmarcia.disqus.com/embed.js",a.setAttribute("data-timestamp",+new Date),(e.head||e.body).appendChild(a)},Ee=()=>{DISQUS.reset(),DISQUS.host._loadEmbed()},Ae=()=>{Array.from(document.querySelectorAll("pre > code")).forEach(e=>{const a=e.className.replace("language-","").trim(),o=e.innerText;e.innerHTML=Prism.highlight(o,Prism.languages[a],a),e.closest("pre").setAttribute("data-lang",a)})},ye=e=>{e.className.includes("opened")?(e.closest("figure").classList.remove("opened"),e.classList.remove("opened")):(ue("image","open-image","post-image"),e.closest("figure").classList.add("opened"),e.classList.add("opened"))},Se=(e,a,o)=>{let n=[];for(e=e.nextElementSibling;e&&!e.isEqualNode(a);)!o||e.matches(o)?(n.push(e),e=e.nextElementSibling):e=e.nextElementSibling;return n};function Pe(e){return{c:d,l:d,m:d,d:d}}function qe(e){var a,o,n,d,p,h,b,P,q,x,T,C,k,N,I,D,X,M,U,_,W,B,V,F,O,H,G,Q,J,Z,ee,ae,oe,ne,re,se,te,ie,le,ce,de,ue,me,ge,be,ve,Ee,Ae,ye,Se,qe,xe,Te,Ce,ke,we,ze,Re,Ne,Ie,De,$e,Xe,Me,Le,Ue,_e,je,We,Be,Ve=e.post.title,Fe=K(e.post.date),Oe=Y(e.post.html),He=e.post.html;z(e.onwindowresize),document.title=a=" "+(e.post.meta_title||e.post.title);var Ge=new j({props:{size:"20"}}),Qe=new L({props:{size:"20"}}),Je=new fe({}),Ye=new he({props:{commentsElement:e.disqusElement,buttonText:"Compartir",text:e.post.meta_title||e.post.title,postUrl:"https://erickmarcia.github.io/blog/"+e.post.slug,twitterUsername:"@Emarcia14"}}),Ke=new pe({props:{currentPost:e.post,temary:e.allHeadingTexts,onTemaryClick:e.onTemaryClick,isStickySidebar:e.isStickySidebar,showTemary:e.windowWidth>992,$$slots:{default:[Pe]},$$scope:{ctx:e}}});return{c(){o=u("meta"),d=u("link"),h=u("meta"),b=u("meta"),P=u("meta"),q=u("meta"),T=u("meta"),k=u("meta"),I=u("meta"),X=u("meta"),M=u("meta"),_=u("meta"),B=u("meta"),F=u("meta"),O=u("meta"),H=v(),G=u("div"),Q=u("div"),J=u("div"),Z=u("div"),ee=u("h2"),ae=E(Ve),oe=v(),ne=u("p"),re=u("time"),Ge.$$.fragment.c(),se=v(),te=E(Fe),ie=v(),ce=v(),de=u("span"),Qe.$$.fragment.c(),ue=v(),me=E(Oe),ge=v(),be=u("div"),ve=u("article"),Ee=u("noscript"),Ae=v(),ye=u("p"),Se=E("Y esto es todo. Espero que te pueda servir."),qe=v(),xe=u("p"),Te=u("b"),Ce=E("Si te gusta mi contenido"),ke=E(', puedes "invitarme" a un café ☕️ para\r\n          apoyarme. 👇🏻'),we=v(),ze=u("div"),Re=u("a"),Ne=u("img"),Ie=v(),De=u("div"),$e=v(),Je.$$.fragment.c(),Xe=v(),Me=u("div"),Ye.$$.fragment.c(),Le=v(),Ue=u("div"),_e=u("div"),je=v(),Ke.$$.fragment.c(),this.h()},l(e){o=r(e,"META",{name:!0,content:!0},!1),s(o).forEach(t),d=r(e,"LINK",{rel:!0,href:!0},!1),s(d).forEach(t),h=r(e,"META",{name:!0,content:!0},!1),s(h).forEach(t),b=r(e,"META",{name:!0,content:!0},!1),s(b).forEach(t),P=r(e,"META",{name:!0,content:!0},!1),s(P).forEach(t),q=r(e,"META",{name:!0,content:!0},!1),s(q).forEach(t),T=r(e,"META",{name:!0,content:!0},!1),s(T).forEach(t),k=r(e,"META",{name:!0,content:!0},!1),s(k).forEach(t),I=r(e,"META",{property:!0,content:!0},!1),s(I).forEach(t),X=r(e,"META",{property:!0,content:!0},!1),s(X).forEach(t),M=r(e,"META",{property:!0,content:!0},!1),s(M).forEach(t),_=r(e,"META",{property:!0,content:!0},!1),s(_).forEach(t),B=r(e,"META",{property:!0,content:!0},!1),s(B).forEach(t),F=r(e,"META",{property:!0,content:!0},!1),s(F).forEach(t),O=r(e,"META",{property:!0,content:!0},!1),s(O).forEach(t),H=A(e,"\r\n\r\n\r\n\r\n\r\n\r\n"),G=r(e,"DIV",{class:!0},!1);var a=s(G);Q=r(a,"DIV",{class:!0},!1);var n=s(Q);J=r(n,"DIV",{class:!0,style:!0},!1);var i=s(J);Z=r(i,"DIV",{class:!0},!1);var l=s(Z);ee=r(l,"H2",{class:!0},!1);var c=s(ee);ae=A(c,Ve),c.forEach(t),oe=A(l,"\r\n        "),ne=r(l,"P",{class:!0},!1);var p=s(ne);re=r(p,"TIME",{datetime:!0,class:!0},!1);var m=s(re);Ge.$$.fragment.l(m),se=A(m,"\r\n              "),te=A(m,Fe),ie=A(m,"  "),m.forEach(t),ce=A(p,"\r\n          "),de=r(p,"SPAN",{class:!0},!1);var g=s(de);Qe.$$.fragment.l(g),ue=A(g,"\r\n              "),me=A(g,Oe),g.forEach(t),p.forEach(t),l.forEach(t),i.forEach(t),ge=A(n,"\r\n    "),be=r(n,"DIV",{class:!0},!1);var f=s(be);ve=r(f,"ARTICLE",{class:!0},!1);var v=s(ve);Ee=u("noscript"),Ae=A(v,"\r\n\r\n        "),ye=r(v,"P",{},!1);var E=s(ye);Se=A(E,"Y esto es todo. Espero que te pueda servir."),E.forEach(t),qe=A(v,"\r\n\r\n        "),xe=r(v,"P",{},!1);var y=s(xe);Te=r(y,"B",{},!1);var S=s(Te);Ce=A(S,"Si te gusta mi contenido"),S.forEach(t),ke=A(y,', puedes "invitarme" a un café ☕️ para\r\n          apoyarme. 👇🏻'),y.forEach(t),we=A(v,"\r\n        "),ze=r(v,"DIV",{class:!0},!1);var x=s(ze);Re=r(x,"A",{href:!0,target:!0},!1);var C=s(Re);Ne=r(C,"IMG",{src:!0,alt:!0},!1),s(Ne).forEach(t),C.forEach(t),x.forEach(t),Ie=A(v,"\r\n\r\n        "),De=r(v,"DIV",{},!1),s(De).forEach(t),v.forEach(t),$e=A(f,"\r\n      "),Je.$$.fragment.l(f),f.forEach(t),Xe=A(n,"\r\n    "),Me=r(n,"DIV",{class:!0},!1);var w=s(Me);Ye.$$.fragment.l(w),w.forEach(t),Le=A(n,"\r\n    "),Ue=r(n,"DIV",{class:!0},!1);var z=s(Ue);_e=r(z,"DIV",{id:!0},!1),s(_e).forEach(t),z.forEach(t),n.forEach(t),je=A(a,"\r\n  "),Ke.$$.fragment.l(a),a.forEach(t),this.h()},h(){o.name="description",o.content=n=e.post.meta_description||e.post.excerpt,d.rel="canonical",d.href=p="https://erickmarcia.github.io/blog/"+e.post.slug,h.name="twitter:card",h.content="summary_large_image",b.name="twitter:site",b.content="@Emarcia14",P.name="twitter:creator",P.content="@Emarcia14",q.name="twitter:title",q.content=x=e.post.meta_title||e.post.title,T.name="twitter:description",T.content=C=e.post.meta_description||e.post.excerpt,k.name="twitter:image",k.content=N="https://erickmarcia.github.io/"+e.post.image,i(I,"property","og:title"),I.content=D=e.post.meta_title||e.post.title,i(X,"property","og:site_name"),X.content="erickmarcia.github.io",i(M,"property","og:description"),M.content=U=e.post.meta_description||e.post.excerpt,i(_,"property","og:image"),_.content=W="https://erickmarcia.github.io/"+e.post.image,i(B,"property","og:url"),B.content=V="https://erickmarcia.github.io/blog/"+e.post.slug,i(F,"property","og:locale"),F.content="es_ES",i(O,"property","og:type"),O.content="article",ee.className="svelte-bquwsq",re.dateTime=le=e.post.date,re.className="svelte-bquwsq",de.className="svelte-bquwsq",ne.className="svelte-bquwsq",Z.className="Post-title svelte-bquwsq",J.className="Post-image svelte-bquwsq",y(J,"background-image","url("+e.post.feature_image+")"),Ne.src="/media/ko-fi.png",Ne.alt="¿Me invitas a un café?",Re.href="https://ko-fi.com/C0C44WHUS#checkoutModal",Re.target="_blank",ze.className="mb-3",ve.className="content",be.className="Post-content svelte-bquwsq",Me.className="Social-media-container svelte-bquwsq",m(Me,"isFloating",e.isSocialToolBoxFloating),_e.id="disqus_thread",Ue.className="Post-comments svelte-bquwsq",Q.className="Post svelte-bquwsq",G.className="Post-container svelte-bquwsq",Be=[g(window,"scroll",e.checkScrollPosition),g(window,"resize",e.onResizeWindow),g(window,"resize",e.onwindowresize),g(be,"click",e.postContentClick)]},m(a,n){c(document.head,o),c(document.head,d),c(document.head,h),c(document.head,b),c(document.head,P),c(document.head,q),c(document.head,T),c(document.head,k),c(document.head,I),c(document.head,X),c(document.head,M),c(document.head,_),c(document.head,B),c(document.head,F),c(document.head,O),l(a,H,n),l(a,G,n),c(G,Q),c(Q,J),c(J,Z),c(Z,ee),c(ee,ae),c(Z,oe),c(Z,ne),c(ne,re),f(Ge,re,null),c(re,se),c(re,te),c(re,ie),c(ne,ce),c(ne,de),f(Qe,de,null),c(de,ue),c(de,me),c(Q,ge),c(Q,be),c(be,ve),c(ve,Ee),Ee.insertAdjacentHTML("beforebegin",He),c(ve,Ae),c(ve,ye),c(ye,Se),c(ve,qe),c(ve,xe),c(xe,Te),c(Te,Ce),c(xe,ke),c(ve,we),c(ve,ze),c(ze,Re),c(Re,Ne),c(ve,Ie),c(ve,De),c(be,$e),f(Je,be,null),$(()=>e.div4_binding(be,null)),c(Q,Xe),c(Q,Me),f(Ye,Me,null),c(Q,Le),c(Q,Ue),c(Ue,_e),$(()=>e.div6_binding(_e,null)),c(G,je),f(Ke,G,null),We=!0},p(e,r){We&&!e.post||a===(a=" "+(r.post.meta_title||r.post.title))||(document.title=a),We&&!e.post||n===(n=r.post.meta_description||r.post.excerpt)||(o.content=n),We&&!e.post||p===(p="https://erickmarcia.github.io/blog/"+r.post.slug)||(d.href=p),We&&!e.post||x===(x=r.post.meta_title||r.post.title)||(q.content=x),We&&!e.post||C===(C=r.post.meta_description||r.post.excerpt)||(T.content=C),We&&!e.post||N===(N="https://erickmarcia.github.io/"+r.post.image)||(k.content=N),We&&!e.post||D===(D=r.post.meta_title||r.post.title)||(I.content=D),We&&!e.post||U===(U=r.post.meta_description||r.post.excerpt)||(M.content=U),We&&!e.post||W===(W="https://erickmarcia.github.io/"+r.post.image)||(_.content=W),We&&!e.post||V===(V="https://erickmarcia.github.io/blog/"+r.post.slug)||(B.content=V),We&&!e.post||Ve===(Ve=r.post.title)||S(ae,Ve),We&&!e.post||Fe===(Fe=K(r.post.date))||S(te,Fe),We&&!e.post||le===(le=r.post.date)||(re.dateTime=le),We&&!e.post||Oe===(Oe=Y(r.post.html))||S(me,Oe),We&&!e.post||y(J,"background-image","url("+r.post.feature_image+")"),We&&!e.post||He===(He=r.post.html)||(R(Ee),Ee.insertAdjacentHTML("beforebegin",He)),e.items&&(r.div4_binding(null,be),r.div4_binding(be,null));var s={};e.disqusElement&&(s.commentsElement=r.disqusElement),e.post&&(s.text=r.post.meta_title||r.post.title),e.post&&(s.postUrl="https://erickmarcia.github.io/blog/"+r.post.slug),Ye.$set(s),e.isSocialToolBoxFloating&&m(Me,"isFloating",r.isSocialToolBoxFloating),e.items&&(r.div6_binding(null,_e),r.div6_binding(_e,null));var t={};e.post&&(t.currentPost=r.post),e.allHeadingTexts&&(t.temary=r.allHeadingTexts),e.onTemaryClick&&(t.onTemaryClick=r.onTemaryClick),e.isStickySidebar&&(t.isStickySidebar=r.isStickySidebar),e.windowWidth&&(t.showTemary=r.windowWidth>992),e.$$scope&&(t.$$scope={changed:e,ctx:r}),Ke.$set(t)},i(e){We||(Ge.$$.fragment.i(e),Qe.$$.fragment.i(e),Je.$$.fragment.i(e),Ye.$$.fragment.i(e),Ke.$$.fragment.i(e),We=!0)},o(e){Ge.$$.fragment.o(e),Qe.$$.fragment.o(e),Je.$$.fragment.o(e),Ye.$$.fragment.o(e),Ke.$$.fragment.o(e),We=!1},d(a){t(o),t(d),t(h),t(b),t(P),t(q),t(T),t(k),t(I),t(X),t(M),t(_),t(B),t(F),t(O),a&&(t(H),t(G)),Ge.$destroy(),Qe.$destroy(),Je.$destroy(),e.div4_binding(null,be),Ye.$destroy(),e.div6_binding(null,_e),Ke.$destroy(),w(Be)}}}async function xe({params:e,query:a}){const o=await this.fetch(`blog/${e.slug}.json`),n=await o.json();if(200===o.status)return{post:n};this.error(o.status,n.message)}function Te(e,a,o){let n,r,s,t,{post:i}=a,l=[],c=[],d=!1,p=!1;const u=N().page.subscribe(({params:e})=>{n&&(o("allHeadingTexts",c=Array.from(n.querySelectorAll("h2")).map(e=>({innerText:e.innerText,element:e,isActive:!1}))),r&&(r.disconnect(),t>992&&g(!0)),Ee(),Ae())}),m=e=>{e.forEach(e=>{const a=c.findIndex(a=>a.element.id===e.target.attributes["data-ref"].value);e.intersectionRatio>0?(c[a].isActive=!0,o("allHeadingTexts",c)):(c[a].isActive=!1,o("allHeadingTexts",c))}),o("allHeadingTexts",c=[...c])},g=e=>{!e&&document.querySelector(".heading-content")||(e=>{const a=Array.from(e.querySelectorAll("h2"));a.forEach((o,n)=>{if(a.length>n){const r=Se(o,a[n+1]),s=document.createElement("div");s.setAttribute("data-ref",o.id),s.setAttribute("class","heading-content"),r.forEach(e=>s.appendChild(e)),e.insertBefore(s,o.nextSibling)}})})(n),r=new IntersectionObserver(m),l=Array.from(document.querySelectorAll(".heading-content")),l.forEach(e=>r.observe(e,{threshold:1})),b()},h=()=>{Ae(),ve(),o("allHeadingTexts",c=Array.from(n.querySelectorAll("h2")).map(e=>({innerText:e.innerText,element:e,isActive:!1}))),t>992&&g(!0)},b=()=>{const e=document.querySelector("nav.Nav");o("isStickySidebar",d=window.pageYOffset>e.offsetTop),o("isSocialToolBoxFloating",p=d&&s.offsetTop-s.offsetHeight>window.pageYOffset)};return I(()=>{"complete"===document.readyState?h():document.addEventListener("readystatechange",async()=>"complete"===document.readyState&&h())}),D(u),e.$set=e=>{"post"in e&&o("post",i=e.post)},{post:i,allHeadingTexts:c,isStickySidebar:d,isSocialToolBoxFloating:p,postContentElement:n,disqusElement:s,windowWidth:t,onResizeWindow:()=>t>992&&g(),checkScrollPosition:b,onTemaryClick:e=>{const{element:a}=c.find(a=>a.innerText===e);a.scrollIntoView({behavior:"smooth",block:"start"}),ue("post","temary","item-click")},postContentClick:e=>{"IMG"===e.srcElement.tagName?ye(e.srcElement):e.srcElement.querySelector("img.opened")&&ye(e.srcElement.querySelector("img.opened"))},onwindowresize:function(){t=window.innerWidth,o("windowWidth",t)},div4_binding:function(e,a){n=e,o("postContentElement",n)},div6_binding:function(e,a){s=e,o("disqusElement",s)}}}export default class extends e{constructor(e){super(),a(this,e,Te,qe,o,["post"])}}export{xe as preload};
