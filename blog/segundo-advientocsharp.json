{"title":"C# - Marca de Agua en un TextEdit -> CueProvider!","slug":"segundo-advientocsharp","html":"<!-- ![Acordeon](media/blog/CSharp/cshar.png) -->\n\n<blockquote>\n<p>Este artículo hace parte de una iniciativa genial: del segundo calendario de\nadviento de C# español. Cada día, dos artículos nuevos sobre C# serán\ncompartidos por la comunidad. Esta es mi contribución.</p>\n</blockquote>\n<p>La programación es sin duda un mundo lleno de aventuras, en donde el programador\nes quien define los limites de su inmaginación, y durante todo este tiempo me he\ntopado con retos tras retos y en este artículo quiero contarte de sobre una\nclase que he ocupado en mis proyectos.</p>\n<h1 id=\"marca-de-agua-en-un-textedit---cueprovider\">Marca de Agua en un TextEdit - CueProvider</h1>\n<p>La idea conciste mostrar un texto en un cuadro de texto antes de poder editarlo\ncomo forma de marca de agua o parcialmente transparentes, suelen usarse en los\nform de Login, para indicar el ingreso de un tipo de dato.</p>\n<p><img src=\"media/blog/CSharp/TextEdit/1-TxtEdit.png\" alt=\"WinForms Marca de agua\"></p>\n<p>Como desarrolladores de aplicaciones modernas esto nos ayudara en nuestras\nimplementaciones de WindosForm, para lo cual utilizaremos CueProvideres una\nclase pequeña que le permite establecer un banner como una marca de agua (el\ntexto de aviso gris que desaparece automáticamente cuando comienza a escribir)\nen un TextBoxcontrol.</p>\n<h3 id=\"cómo-usar-cueprovider\">Cómo usar CueProvider</h3>\n<ul>\n<li>CueProvideres fácil de usar y tiene solo dos métodos: uno para establecer\nTextBox el texto de referencia de una, el otro para borrarlo. Para\nconfigurar el texto de referencia, llame <strong>SetCue();</strong> para limpiarlo, llame\n<strong>ClearCue()</strong>. Estas llamadas se colocan mejor en el <strong>OnLoadcontrolador</strong>\nde su formulario .</li>\n</ul>\n<blockquote>\n<p>Example: CueProvider.SetCue(TxtEmail.MaskBox, &quot; <a target=\"_blank\" rel=\"nofollow\" href=\"mailto:Example@example.gob.ni\">Example@example.gob.ni</a>&quot;);</p>\n</blockquote>\n<h3 id=\"cómo-funciona\">Cómo Funciona</h3>\n<p><strong>CueProvider</strong> funciona enviando TextBox el <strong>EM_SETCUEBANNER</strong> mensaje. El\nmensaje se envía usando la <strong>SendMessage()</strong> API Win32. <strong>EM_SETCUEBANNER</strong>\nPuede encontrar más información sobre el mensaje en esta página de MSDN.</p>\n<h4 id=\"clase-cueprovider\">Clase CueProvider</h4>\n<ul>\n<li>Referencias</li>\n</ul>\n<blockquote>\n<p>using DevExpress.XtraEditors; using System; using\nSystem.Runtime.InteropServices; using System.Windows.Forms;</p>\n</blockquote>\n<ul>\n<li><p>Codigo</p>\n<p>Clase para poner texto en forma de Marca de Agua a un Texbox. Proporciona\nindicaciones textuales a un cuadro de texto.</p>\n<p><img src=\"media/blog/CSharp/TextEdit/carbon.png\" alt=\"code\"></p>\n</li>\n</ul>\n<h1 id=\"conclución\">Conclución</h1>\n<p>Como puede ver, no hay nada demasiado complicado en esta clase. Lo CueBanner\nreuní en unos minutos y quería compartirlo con la comunidad en el calendario de\nAviento de C# con la esperanza de que pudiera ayudar a nuestras aplicaciones de\nescritorio y pulir un pocco nuestra interfaz de usuario.</p>\n<p>C# es un lenguaje muy excepcional con muchísimas funcionalidades por descubrir.</p>\n<p>Y tú, ¿Considerarías usar esta clase en tu próxima aplicación?</p>\n<h1 id=\"agradecimimento\">Agradecimimento</h1>\n<p>Un Agradecimiento especial a los organizadores del segundo <strong>#advientocsharp</strong>\nen español, por darme la oportunidad de ser parte de esta evento, esperando que\neste articulos sea de sua agrado me despido.</p>\n<h1 id=\"fuentes-externas\">Fuentes externas.</h1>\n<p>He tomado parte de la información mostrada en esta publicación del siguiente\nenlace <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.codeproject.com/Articles/27853/CueProvider\">CueProvider</a></p>\n","date":"2019-12-09T09:47:12.000-07:00","excerpt":"","printDate":"December 9, 2019","printReadingTime":"3 min read"}